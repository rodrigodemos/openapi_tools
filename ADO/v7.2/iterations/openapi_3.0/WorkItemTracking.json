{
  "openapi": "3.0.1",
  "info": {
    "title": "WorkItemTracking",
    "description": "",
    "termsOfService": "https://go.microsoft.com/fwlink/?LinkId=329770",
    "contact": {
      "name": "nugetvss",
      "email": "nugetvss@microsoft.com"
    },
    "license": {
      "name": "MICROSOFT SOFTWARE LICENSE TERMS",
      "url": "https://go.microsoft.com/fwlink/?LinkId=329770"
    },
    "version": "7.2-preview"
  },
  "externalDocs": {
    "description": "Azure DevOps REST APIs",
    "url": "https://aka.ms/azure-devops-rest-apis"
  },
  "servers": [
    {
      "url": "https://dev.azure.com/"
    }
  ],
  "security": [
    {
      "accessToken": []
    }
  ],
  "tags": [
    {
      "name": "Account My Work Recent Activity"
    },
    {
      "name": "Artifact Link Types"
    },
    {
      "name": "Artifact Uri Query"
    },
    {
      "name": "Attachments",
      "description": "Create, get and permanently delete attachments associated with work items"
    },
    {
      "name": "Classification Nodes"
    },
    {
      "name": "Comment Reactions Engaged Users"
    },
    {
      "name": "Comments"
    },
    {
      "name": "Comments Reactions"
    },
    {
      "name": "Comments Versions"
    },
    {
      "name": "Fields"
    },
    {
      "name": "Github Connections"
    },
    {
      "name": "Project Process Migration"
    },
    {
      "name": "Queries",
      "description": "The queries in a team project are organized in folders.\n\nA sample structure of queries and folders might appear as shown here.\n\n* **My Queries**\n* **Shared Queries**\n  * Feedback (Query)\n    * **Current Sprint**\n      * Blocked Tasks (Query)\n      * Open Impediments (Query)\n      * Test Cases (Query)\n      * Unfinished Work (Query)\n      * Work in Progress (Query)"
    },
    {
      "name": "Recyclebin"
    },
    {
      "name": "Reporting Work Item Links",
      "description": "This API provides access to all work item links in your project or collection and allows you to build a warehouse.\n\nThe response of the API contains a batch of work item links (\"values\"), a URL to the next batch of work item links (\"nextLink\") and a boolean that tells you whether you have read all currently available work item links (\"isLastBatch\").\n\nThe workflow for building your warehouse is as follows:\n  1. Make a request to the API without providing a watermark parameter\n  2. Process the work item links returned by the API\n  3. Persist \"nextLink\" and check \"isLastBatch\"\n    * If \"isLastBatch\" is true, pause for a period of time (varies depending on your target latency)\n  4. Make the next request using the URL from \"nextLink\"\n  5. Go to step 2"
    },
    {
      "name": "Reporting Work Item Revisions",
      "description": "This API provides access to all work item revisions in your project or collection and allows you to build a warehouse.\n\n The response of the API contains a batch of work item revisions(\"values\"), a URL to the next batch of work item revisions(\"nextLink\") and a boolean that tells you whether you have read all currently available work item revisions(\"isLastBatch\").\n\n The workflow for building your warehouse is as follows:\n 1. Make a request to the API without providing a continuationToken parameter\n 2. Process the work item revisions returned by the API\n 3. Persist \"nextLink\" and check \"isLastBatch\"\n     * If \"isLastBatch\" is true, pause for a period of time(varies depending on your target latency)\n 4. Make the next request using the URL from \"nextLink\"\n 5. Go to step 2\n\n ## Note\n The results of this API are impacted when using Move Work Item and/or Change Work Item Type features in conjunction with \"project\" in the url and/or \"types\" in the query string.<br />\n  - Project-scoped requests will only return work item revisions from the specified project.\n  - Types-scoped requests will only return work item revisions of the specified type(s)\n\n ## Sample Projects\n [C# Example](https://github.com/sferg-msft/vsts-wit-reporting-example)"
    },
    {
      "name": "Revisions",
      "description": "This controller version exists to support returning identity values and project scoped urls for work items"
    },
    {
      "name": "Send Mail"
    },
    {
      "name": "Tags",
      "description": "Tags provide ability to manage the tags for the project. \nThird party services or users with read or write permission in the work item can\nlist, get, update and delete tags. The tags are shared between Work Items and Pull Requests\nand are used to provide quick insights into both, an example\ncan be labelling a Pull Request as \"WIP\", \"Feature\", or \"Bug\" to let others\nknow the state and purpose of the Pull Request.\n\nAs the tags are shared betweek Work Items and Pull Requests, then any change (update or delete) is reflected\nin both. Deleting the tag will remove the tag from all Work Items as well as remove the label (tag) from the Pull Request."
    },
    {
      "name": "Templates"
    },
    {
      "name": "Temp Queries",
      "description": "Temporary query API. Temporary queries are used to save a specific wiql for a short time"
    },
    {
      "name": "Updates",
      "description": "This controller version exists to support returning identity values and project scoped urls for work items"
    },
    {
      "name": "Wiql",
      "description": "The WIQL API is used to run a query given the WIQL text or a saved query ID.\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts)."
    },
    {
      "name": "Work Item Icons",
      "description": "Discover the list of work item icons and view individual icons."
    },
    {
      "name": "Work Item Relation Types"
    },
    {
      "name": "Work Item Revisions Discussions"
    },
    {
      "name": "Work Items",
      "description": "The Work Item API is used for listing, creating and updating work items"
    },
    {
      "name": "Work Item Transitions",
      "description": "Currently only for the single GetWorkItemNextStatesOnCheckinAction that returns the next state if the work item is checked in."
    },
    {
      "name": "Work Item Type Categories",
      "description": "The controller that services the requests for Work Item Type Categories."
    },
    {
      "name": "Work Item Types",
      "description": "The controller that services the requests for Work Item Types"
    },
    {
      "name": "Work Item Types Field",
      "description": "Project specific field definition API."
    },
    {
      "name": "Work Item Type States",
      "description": "The controller that services the requests for states of Work Item Types."
    }
  ],
  "paths": {
    "/{organization}/_apis/wit/artifactlinktypes": {
      "get": {
        "tags": [
          "Artifact Link Types"
        ],
        "description": "Get the list of work item tracking outbound artifact link types.",
        "operationId": "Artifact Link Types_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkArtifactLink"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "artifactLinkTypes",
        "x-ms-vss-method": "GetWorkArtifactLinkTypes",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/artifactLinkTypes/GET_wit_artifactlinktypes.json"
          }
        }
      }
    },
    "/{organization}/_apis/wit/workitemicons": {
      "get": {
        "tags": [
          "Work Item Icons"
        ],
        "description": "Get a list of all work item icons.",
        "operationId": "Work Item Icons_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemIcon"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemIcons",
        "x-ms-vss-method": "GetWorkItemIcons",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get work item icons": {
            "$ref": "./httpExamples/workItemIcons/GET__workitem_icons.json"
          }
        }
      }
    },
    "/{organization}/_apis/wit/workitemicons/{icon}": {
      "get": {
        "tags": [
          "Work Item Icons"
        ],
        "description": "Get a work item icon given the friendly name and icon color.",
        "operationId": "Work Item Icons_Get",
        "parameters": [
          {
            "name": "icon",
            "in": "path",
            "description": "The name of the icon",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "color",
            "in": "query",
            "description": "The 6-digit hex color for the icon",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "v",
            "in": "query",
            "description": "The version of the icon (used only for cache invalidation)",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "image/svg+xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemIcon"
                }
              },
              "image/xaml+xml": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemIcon"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemIcon"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemIcons",
        "x-ms-vss-method": "GetWorkItemIcon",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get work item icon": {
            "$ref": "./httpExamples/workItemIcons/GET__workitem_icon.json"
          }
        }
      }
    },
    "/{organization}/_apis/wit/workitemrelationtypes": {
      "get": {
        "tags": [
          "Work Item Relation Types"
        ],
        "description": "Gets the work item relation types.",
        "operationId": "Work Item Relation Types_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemRelationType"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemRelationTypes",
        "x-ms-vss-method": "GetRelationTypes",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get the work item relation types": {
            "$ref": "./httpExamples/workItemRelationTypes/GET__relation_types.json"
          }
        }
      }
    },
    "/{organization}/_apis/wit/workitemrelationtypes/{relation}": {
      "get": {
        "tags": [
          "Work Item Relation Types"
        ],
        "description": "Gets the work item relation type definition.",
        "operationId": "Work Item Relation Types_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "relation",
            "in": "path",
            "description": "The relation name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemRelationType"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemRelationTypes",
        "x-ms-vss-method": "GetRelationType",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get the work item relation type": {
            "$ref": "./httpExamples/workItemRelationTypes/GET__relation_type.json"
          }
        }
      }
    },
    "/{organization}/_apis/wit/workitemtransitions": {
      "get": {
        "tags": [
          "Work Item Transitions"
        ],
        "description": "Returns the next state on the given work item IDs.",
        "operationId": "Work Item Transitions_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "list of work item ids",
            "required": true,
            "schema": {
              "type": "string",
              "format": "array (int32)"
            }
          },
          {
            "name": "action",
            "in": "query",
            "description": "possible actions. Currently only supports checkin",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemNextStateOnTransition"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemTransitions",
        "x-ms-vss-method": "GetWorkItemNextStatesOnCheckinAction",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get next state on a work item": {
            "$ref": "./httpExamples/workItemTransitions/GET_wit_workItemTransitions.json"
          }
        }
      }
    },
    "/{organization}/_apis/work/accountmyworkrecentactivity": {
      "get": {
        "tags": [
          "Account My Work Recent Activity"
        ],
        "description": "Gets recent work item activities",
        "operationId": "Account My Work Recent Activity_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/AccountRecentActivityWorkItemModel2"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "accountMyWorkRecentActivity",
        "x-ms-vss-method": "GetRecentActivityData",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/githubconnections": {
      "get": {
        "tags": [
          "Github Connections"
        ],
        "description": "Gets a list of github connections",
        "operationId": "Github Connections_Get Github Connections",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitHubConnectionModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.githubconnections"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "githubConnections",
        "x-ms-vss-method": "GetGithubConnections",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get github connections list": {
            "$ref": "./httpExamples/githubConnections/GET_githubConnections.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/githubconnections/{connectionId}/repos": {
      "get": {
        "tags": [
          "Github Connections"
        ],
        "description": "Gets a list of repos within specified github connection.",
        "operationId": "Github Connections_Get Github Connection Repositories",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitHubConnectionRepoModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.githubconnections"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "githubConnections",
        "x-ms-vss-method": "GetGithubConnectionRepositories",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get github connection repos list": {
            "$ref": "./httpExamples/githubConnections/GET_githubConnections_repos.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/githubconnections/{connectionId}/reposBatch": {
      "post": {
        "tags": [
          "Github Connections"
        ],
        "description": "Add/remove list of repos within specified github connection.",
        "operationId": "Github Connections_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "connectionId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/GitHubConnectionReposBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/GitHubConnectionRepoModel"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.githubconnections_manage"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "githubConnections",
        "x-ms-vss-method": "UpdateGithubConnectionRepos",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Add list of repos to the specified github connection": {
            "$ref": "./httpExamples/githubConnections/POST_githubConnections_reposBatch_add.json"
          },
          "Remove list of repos from the specified github connection": {
            "$ref": "./httpExamples/githubConnections/POST_githubConnections_reposBatch_remove.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/artifacturiquery": {
      "post": {
        "tags": [
          "Artifact Uri Query"
        ],
        "description": "Queries work items linked to a given list of artifact URI.",
        "operationId": "Artifact Uri Query_Query",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Defines a list of artifact URI for querying work items.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ArtifactUriQuery"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ArtifactUriQueryResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "artifactUriQuery",
        "x-ms-vss-method": "QueryWorkItemsForArtifactUris",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Query work items for artifacts": {
            "$ref": "./httpExamples/artifactUriQuery/POST__wit_artifacturiquery.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/attachments": {
      "post": {
        "tags": [
          "Attachments"
        ],
        "description": "Uploads an attachment.\n\nOn accounts with higher attachment upload limits (>130MB), you will need to use chunked upload.\nTo upload an attachment in multiple chunks, you first need to [**Start a Chunked Upload**](#start_a_chunked_upload) and then follow the example from the **Upload Chunk** section.",
        "operationId": "Attachments_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "The name of the file",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "uploadType",
            "in": "query",
            "description": "Attachment upload type: Simple or Chunked",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "areaPath",
            "in": "query",
            "description": "Target project Area Path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Stream to upload",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "Stream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentReference"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "CreateAttachment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Upload a text file": {
            "$ref": "./httpExamples/attachments/POST__wit_attachments_fileName-_textFile_.json"
          },
          "Upload a binary file": {
            "$ref": "./httpExamples/attachments/POST__wit_attachments_fileName-_binaryFile_.json"
          },
          "Start a Chunked Upload": {
            "$ref": "./httpExamples/attachments/POST_wit_attachments_fileName_chunked_register.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/attachments/{id}": {
      "get": {
        "tags": [
          "Attachments"
        ],
        "description": "Downloads an attachment.",
        "operationId": "Attachments_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Attachment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fileName",
            "in": "query",
            "description": "Name of the file",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "download",
            "in": "query",
            "description": "If set to <c>true</c> always download attachment",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "Stream"
                }
              },
              "application/zip": {
                "schema": {
                  "type": "string",
                  "format": "Stream"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "GetAttachment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get Attachment Content": {
            "$ref": "./httpExamples/attachments/GET__wit_attachments_get_attachment_content.json"
          },
          "Get Project Attachment Content": {
            "$ref": "./httpExamples/attachments/GET__wit_attachments_get_project_attachment_content.json"
          },
          "Download Attachment": {
            "$ref": "./httpExamples/attachments/GET__wit_attachments_download_attachment.json"
          }
        }
      },
      "put": {
        "tags": [
          "Attachments"
        ],
        "description": "Uploads an attachment chunk.\n\nBefore performing [**Upload a Chunk**](#upload-a-chunk), make sure to have an attachment id returned in **Start a Chunked Upload** example on **Create** section. Specify the byte range of the chunk using Content-Length. For example: \"Content - Length\": \"bytes 0 - 39999 / 50000\" for the first 40000 bytes of a 50000 byte file.",
        "operationId": "Attachments_Upload Chunk",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the attachment",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "contentRangeHeader",
            "in": "header",
            "description": "starting and ending byte positions for chunked file upload, format is \"Content-Range\": \"bytes 0-10000/50000\"",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fileName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Stream to upload",
          "content": {
            "application/octet-stream": {
              "schema": {
                "type": "string",
                "format": "Stream"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AttachmentReference"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "UploadAttachment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Upload a Chunk": {
            "$ref": "./httpExamples/attachments/PUT_wit_attachments_fileName_chunked_content1.json"
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Attachments"
        ],
        "description": "Permanently delete an attachment.",
        "operationId": "Attachments_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "Attachment ID",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DestroyedAttachment"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_full"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "attachments",
        "x-ms-vss-method": "DeleteAttachment",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/classificationnodes": {
      "get": {
        "tags": [
          "Classification Nodes"
        ],
        "description": "Gets root classification nodes under the project.",
        "operationId": "Classification Nodes_Get Root Nodes",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$depth",
            "in": "query",
            "description": "Depth of children to fetch.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemClassificationNode"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "GetRootNodes",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/classificationnodes/{structureGroup}/{path}": {
      "get": {
        "tags": [
          "Classification Nodes"
        ],
        "description": "Gets the classification node for a given node path.",
        "operationId": "Classification Nodes_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "structureGroup",
            "in": "path",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "areas",
                "iterations"
              ],
              "x-ms-enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "TreeStructureGroup",
              "values": [
                {
                  "value": "areas",
                  "description": ""
                },
                {
                  "value": "iterations",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Path of the classification node.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$depth",
            "in": "query",
            "description": "Depth of children to fetch.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemClassificationNode"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "GetClassificationNode",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get an area": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas__areaPath_.json"
          },
          "Get an iteration": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations__iterationPath_.json"
          }
        }
      },
      "post": {
        "tags": [
          "Classification Nodes"
        ],
        "description": "Create new or update an existing classification node.",
        "operationId": "Classification Nodes_Create Or Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "structureGroup",
            "in": "path",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "areas",
                "iterations"
              ],
              "x-ms-enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "TreeStructureGroup",
              "values": [
                {
                  "value": "areas",
                  "description": ""
                },
                {
                  "value": "iterations",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Path of the classification node.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Node to create or update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemClassificationNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemClassificationNode"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "CreateOrUpdateClassificationNode",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Create an area": {
            "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_areas.json"
          },
          "Move an area node": {
            "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_areas__areaParent_.json"
          },
          "Create an iteration": {
            "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_iterations.json"
          },
          "Move an iteration node": {
            "$ref": "./httpExamples/classificationNodes/POST__wit_classificationNodes_iterations__iterationParent_.json"
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Classification Nodes"
        ],
        "description": "Delete an existing classification node.",
        "operationId": "Classification Nodes_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "structureGroup",
            "in": "path",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "areas",
                "iterations"
              ],
              "x-ms-enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "TreeStructureGroup",
              "values": [
                {
                  "value": "areas",
                  "description": ""
                },
                {
                  "value": "iterations",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Path of the classification node.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$reclassifyId",
            "in": "query",
            "description": "Id of the target classification node for reclassification.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "DeleteClassificationNode",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Delete an area node": {
            "$ref": "./httpExamples/classificationNodes/DELETE__wit_classificationNodes_areas__areaParent___reclassifyId-_rootAreaId_.json"
          },
          "Delete an iteration node": {
            "$ref": "./httpExamples/classificationNodes/DELETE__wit_classificationNodes_iterations__iterationParent___reclassifyId-_rootIterationId_.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Classification Nodes"
        ],
        "description": "Update an existing classification node.",
        "operationId": "Classification Nodes_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "structureGroup",
            "in": "path",
            "description": "Structure group of the classification node, area or iteration.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "areas",
                "iterations"
              ],
              "x-ms-enum": {
                "name": "TreeStructureGroup",
                "values": [
                  {
                    "value": "areas",
                    "description": ""
                  },
                  {
                    "value": "iterations",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "TreeStructureGroup",
              "values": [
                {
                  "value": "areas",
                  "description": ""
                },
                {
                  "value": "iterations",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "path",
            "in": "path",
            "description": "Path of the classification node.",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Node to create or update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemClassificationNode"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemClassificationNode"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "UpdateClassificationNode",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Rename an area": {
            "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_areas__areaPath_.json"
          },
          "Rename an iteration": {
            "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_iterations__iterationPath_.json"
          },
          "Change an iteration's dates": {
            "$ref": "./httpExamples/classificationNodes/PATCH__wit_classificationNodes_iterations__iterationPathNew_.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/fields": {
      "get": {
        "tags": [
          "Fields"
        ],
        "description": "Returns information for all fields. The project ID/name parameter is optional.",
        "operationId": "Fields_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Use ExtensionFields to include extension fields, otherwise exclude them. Unless the feature flag for this parameter is enabled, extension fields are always included.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "extensionFields",
                "includeDeleted"
              ],
              "x-ms-enum": {
                "name": "GetFieldsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "extensionFields",
                    "description": "Adds extension fields to the response."
                  },
                  {
                    "value": "includeDeleted",
                    "description": "Includes fields that have been deleted."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "GetFieldsExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "extensionFields",
                  "description": "Adds extension fields to the response."
                },
                {
                  "value": "includeDeleted",
                  "description": "Includes fields that have been deleted."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemField2"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "GetWorkItemFields",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Returns information for all fields": {
            "$ref": "./httpExamples/fields/GET__wit_fields.json"
          }
        }
      },
      "post": {
        "tags": [
          "Fields"
        ],
        "description": "Create a new field.",
        "operationId": "Fields_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "New field definition",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemField2"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemField2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "CreateWorkItemField",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Create a new field": {
            "$ref": "./httpExamples/fields/POST_wit_field.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/fields/{fieldNameOrRefName}": {
      "get": {
        "tags": [
          "Fields"
        ],
        "description": "Gets information on a specific field.",
        "operationId": "Fields_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldNameOrRefName",
            "in": "path",
            "description": "Field simple name or reference name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemField2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "GetWorkItemField",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Gets information on a specific field": {
            "$ref": "./httpExamples/fields/GET__wit_fields__fieldName_.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Fields"
        ],
        "description": "Deletes the field. To undelete a filed, see \"Update Field\" API.",
        "operationId": "Fields_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldNameOrRefName",
            "in": "path",
            "description": "Field simple name or reference name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "DeleteWorkItemField",
        "x-ms-preview": true
      },
      "patch": {
        "tags": [
          "Fields"
        ],
        "description": "Update a field.",
        "operationId": "Fields_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fieldNameOrRefName",
            "in": "path",
            "description": "Name/reference name of the field to be updated",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Payload contains desired value of the field's properties",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/FieldUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemField2"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "fields",
        "x-ms-vss-method": "UpdateWorkItemField",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Undelete a field": {
            "$ref": "./httpExamples/fields/UPDATE_wit_fields_UndeleteField.json"
          },
          "Set field locked": {
            "$ref": "./httpExamples/fields/UPDATE_wit_fields_LockField.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/projectprocessmigration": {
      "post": {
        "tags": [
          "Project Process Migration"
        ],
        "description": "Migrates a project to a different process within the same OOB type. For example, you can only migrate a project from agile/custom-agile to agile/custom-agile.",
        "operationId": "Project Process Migration_Migrate Projects Process",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProcessIdModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProcessMigrationResultModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "projectProcessMigration",
        "x-ms-vss-method": "MigrateProjectsProcess",
        "x-ms-preview": true,
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/queries": {
      "get": {
        "tags": [
          "Queries"
        ],
        "description": "Gets the root queries and their children",
        "operationId": "Queries_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "wiql",
                "clauses",
                "all",
                "minimal"
              ],
              "x-ms-enum": {
                "name": "QueryExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Expands Columns, Links and ChangeInfo"
                  },
                  {
                    "value": "wiql",
                    "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                  },
                  {
                    "value": "clauses",
                    "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                  },
                  {
                    "value": "all",
                    "description": "Expands all properties"
                  },
                  {
                    "value": "minimal",
                    "description": "Displays minimal properties and the WIQL text"
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "QueryExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Expands Columns, Links and ChangeInfo"
                },
                {
                  "value": "wiql",
                  "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                },
                {
                  "value": "clauses",
                  "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                },
                {
                  "value": "all",
                  "description": "Expands all properties"
                },
                {
                  "value": "minimal",
                  "description": "Displays minimal properties and the WIQL text"
                }
              ]
            }
          },
          {
            "name": "$depth",
            "in": "query",
            "description": "In the folder of queries, return child queries and folders to this depth.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$includeDeleted",
            "in": "query",
            "description": "Include deleted queries and folders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryHierarchyItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "GetQueries",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/queries/GET__wit_queries__depth-1.json"
          },
          "Just the root query folders": {
            "$ref": "./httpExamples/queries/GET__wit_queries.json"
          },
          "With the query string and columns and sort options": {
            "$ref": "./httpExamples/queries/GET__wit_queries__depth-1__expand-all.json"
          },
          "Including deleted queries": {
            "$ref": "./httpExamples/queries/GET__wit_queries__depth-2__includeDeleted-true.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/queries/{query}": {
      "get": {
        "tags": [
          "Queries"
        ],
        "description": "Retrieves an individual query and its children",
        "operationId": "Queries_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "path",
            "description": "ID or path of the query.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Include the query string (wiql), clauses, query result columns, and sort options in the results.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "wiql",
                "clauses",
                "all",
                "minimal"
              ],
              "x-ms-enum": {
                "name": "QueryExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Expands Columns, Links and ChangeInfo"
                  },
                  {
                    "value": "wiql",
                    "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                  },
                  {
                    "value": "clauses",
                    "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                  },
                  {
                    "value": "all",
                    "description": "Expands all properties"
                  },
                  {
                    "value": "minimal",
                    "description": "Displays minimal properties and the WIQL text"
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "QueryExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Expands Columns, Links and ChangeInfo"
                },
                {
                  "value": "wiql",
                  "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                },
                {
                  "value": "clauses",
                  "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                },
                {
                  "value": "all",
                  "description": "Expands all properties"
                },
                {
                  "value": "minimal",
                  "description": "Displays minimal properties and the WIQL text"
                }
              ]
            }
          },
          {
            "name": "$depth",
            "in": "query",
            "description": "In the folder of queries, return child queries and folders to this depth.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$includeDeleted",
            "in": "query",
            "description": "Include deleted queries and folders",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$useIsoDateFormat",
            "in": "query",
            "description": "DateTime query clauses will be formatted using a ISO 8601 compliant format",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHierarchyItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "GetQuery",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Query by ID": {
            "$ref": "./httpExamples/queries/GET__wit_queries__queryId_.json"
          },
          "Query by Name": {
            "$ref": "./httpExamples/queries/GET__wit_queries_Shared Queries__folderName___queryName_.json"
          },
          "Folder by ID": {
            "$ref": "./httpExamples/queries/GET__wit_queries__folderId_.json"
          },
          "Folder by Name": {
            "$ref": "./httpExamples/queries/GET__wit_queries_Shared Queries__folderName_.json"
          },
          "Deleted query by ID": {
            "$ref": "./httpExamples/queries/GET__wit_queries__queryId___includeDeleted-true.json"
          },
          "Flat query with expanded clauses": {
            "$ref": "./httpExamples/queries/GET__wit_queries__queryId___expand-clauses.json"
          },
          "Hierarchical query with expanded clauses": {
            "$ref": "./httpExamples/queries/GET__wit_queries__hierarchicalQueryId___expand-clauses.json"
          }
        }
      },
      "post": {
        "tags": [
          "Queries"
        ],
        "description": "Creates a query, or moves a query.\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
        "operationId": "Queries_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "path",
            "description": "The parent id or path under which the query is to be created.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateWiqlOnly",
            "in": "query",
            "description": "If you only want to validate your WIQL query without actually creating one, set it to true. Default is false.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The query to create.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHierarchyItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHierarchyItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "CreateQuery",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Create a query": {
            "$ref": "./httpExamples/queries/POST__wit_queries_Shared Queries__folderName_.json"
          },
          "Create a folder": {
            "$ref": "./httpExamples/queries/POST__wit_queries_Shared Queries.json"
          },
          "Move a query or folder": {
            "$ref": "./httpExamples/queries/POST__wit_queries_My Queries.json"
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Queries"
        ],
        "description": "Delete a query or a folder. This deletes any permission change on the deleted query or folder and any of its descendants if it is a folder. It is important to note that the deleted permission changes cannot be recovered upon undeleting the query or folder.",
        "operationId": "Queries_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "path",
            "description": "ID or path of the query or folder to delete.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "DeleteQuery",
        "x-ms-preview": true,
        "x-ms-examples": {
          "By ID": {
            "$ref": "./httpExamples/queries/DELETE__wit_queries__queryId_.json"
          },
          "By folder path": {
            "$ref": "./httpExamples/queries/DELETE__wit_queries_My Queries__folderNameNew_.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Queries"
        ],
        "description": "Update a query or a folder. This allows you to update, rename and move queries and folders.",
        "operationId": "Queries_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "query",
            "in": "path",
            "description": "The ID or path for the query to update.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$undeleteDescendants",
            "in": "query",
            "description": "Undelete the children of this folder. It is important to note that this will not bring back the permission changes that were previously applied to the descendants.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The query to update.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryHierarchyItem"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/QueryHierarchyItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "UpdateQuery",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Update a query": {
            "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName___queryNameNew_.json"
          },
          "Rename a query": {
            "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName_.json"
          },
          "Rename a folder": {
            "$ref": "./httpExamples/queries/PATCH__wit_queries_Shared Queries__folderName_.json"
          },
          "Undelete a query or folder": {
            "$ref": "./httpExamples/queries/PATCH__wit_queries__folderId___undeleteDescendants-true.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/queriesbatch": {
      "post": {
        "tags": [
          "Queries"
        ],
        "description": "Gets a list of queries by ids (Maximum 1000)",
        "operationId": "Queries_Get Queries Batch",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/QueryBatchGetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/QueryHierarchyItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "queriesBatch",
        "x-ms-vss-method": "GetQueriesBatch",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Gets a list of queries by ids": {
            "$ref": "./httpExamples/queriesBatch/POST__wit_queriesbatch_ids-_ids_.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/recyclebin": {
      "get": {
        "tags": [
          "Recyclebin"
        ],
        "description": "Gets a list of the IDs and the URLs of the deleted the work items in the Recycle Bin.",
        "operationId": "Recyclebin_Get Deleted Work Item Shallow References",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemDeleteShallowReference"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "GetDeletedWorkItemShallowReferences",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/recyclebin/GET__wit_recyclebin.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/recyclebin/{id}": {
      "get": {
        "tags": [
          "Recyclebin"
        ],
        "description": "Gets a deleted work item from Recycle Bin.",
        "operationId": "Recyclebin_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work item to be returned",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDelete"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "GetDeletedWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/recyclebin/GET__wit_recyclebin__id_.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Recyclebin"
        ],
        "description": "Destroys the specified work item permanently from the Recycle Bin. This action can not be undone.",
        "operationId": "Recyclebin_Destroy Work Item",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work item to be destroyed permanently",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "DestroyWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/recyclebin/DELETE__wit_recyclebin__id_.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Recyclebin"
        ],
        "description": "Restores the deleted work item from Recycle Bin.",
        "operationId": "Recyclebin_Restore Work Item",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work item to be restored",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Paylod with instructions to update the IsDeleted flag to false",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemDeleteUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDelete"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "RestoreWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Restore a work item": {
            "$ref": "./httpExamples/recyclebin/PATCH__wit_recyclebin_restore.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/reporting/workitemlinks": {
      "get": {
        "tags": [
          "Reporting Work Item Links"
        ],
        "description": "Get a batch of work item links",
        "operationId": "Reporting Work Item Links_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "linkTypes",
            "in": "query",
            "description": "A list of types to filter the results to specific link types. Omit this parameter to get work item links of all link types.",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item links of all work item types.",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Specifies the continuationToken to start the batch from. Omit this parameter to get the first batch of links.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "Date/time to use as a starting point for link changes. Only link changes that occurred after that date/time will be returned. Cannot be used in conjunction with 'watermark' parameter.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingWorkItemLinksBatch"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItemLinks",
        "x-ms-vss-method": "GetReportingLinksByLinkType",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemLinks/GET__wit_reporting_workItemLinks_50.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/reporting/workitemrevisions": {
      "get": {
        "tags": [
          "Reporting Work Item Revisions"
        ],
        "description": "Get a batch of work item revisions with the option of including deleted items",
        "operationId": "Reporting Work Item Revisions_Read Reporting Revisions Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "types",
            "in": "query",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "includeIdentityRef",
            "in": "query",
            "description": "Return an identity reference instead of a string value for identity fields.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Specify if the deleted item should be returned.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeTagRef",
            "in": "query",
            "description": "Specify if the tag objects should be returned for System.Tags field.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "includeLatestOnly",
            "in": "query",
            "description": "Return only the latest revisions of work items, skipping all historical revisions",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Return all the fields in work item revisions, including long text fields which are not returned by default",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "fields"
              ],
              "x-ms-enum": {
                "name": "ReportingRevisionsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "fields",
                    "description": "Add fields to the response."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "ReportingRevisionsExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "fields",
                  "description": "Add fields to the response."
                }
              ]
            }
          },
          {
            "name": "includeDiscussionChangesOnly",
            "in": "query",
            "description": "Return only the those revisions of work items, where only history field was changed",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$maxPageSize",
            "in": "query",
            "description": "The maximum number of results to return in this batch",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingWorkItemRevisionsBatch"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemRevisions",
        "x-ms-vss-method": "ReadReportingRevisionsGet",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get the first batch of work item revisions": {
            "$ref": "./httpExamples/workItemRevisions/GET__wit_reporting_workItemRevisions.json"
          },
          "Get a batch of work item revisions with identity references": {
            "$ref": "./httpExamples/workItemRevisions/GET__wit_reporting_workItemRevisions_includeIdentityRef-true_watermark-794.json"
          }
        }
      },
      "post": {
        "tags": [
          "Reporting Work Item Revisions"
        ],
        "description": "Get a batch of work item revisions. This request may be used if your list of fields is large enough that it may run the URL over the length limit.",
        "operationId": "Reporting Work Item Revisions_Read Reporting Revisions Post",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "continuationToken",
            "in": "query",
            "description": "Specifies the watermark to start the batch from. Omit this parameter to get the first batch of revisions.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "startDateTime",
            "in": "query",
            "description": "Date/time to use as a starting point for revisions, all revisions will occur after this date/time. Cannot be used in conjunction with 'watermark' parameter.",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "fields"
              ],
              "x-ms-enum": {
                "name": "ReportingRevisionsExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "fields",
                    "description": "Add fields to the response."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "ReportingRevisionsExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "fields",
                  "description": "Add fields to the response."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "An object that contains request settings: field filter, type filter, identity format",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReportingWorkItemRevisionsFilter"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingWorkItemRevisionsBatch"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemRevisions",
        "x-ms-vss-method": "ReadReportingRevisionsPost",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemRevisions/POST__wit_reporting_workItemRevisions_watermark-794.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/reporting/workItemRevisions/discussions": {
      "get": {
        "tags": [
          "Work Item Revisions Discussions"
        ],
        "operationId": "Work Item Revisions Discussions_Read Reporting Discussions",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "continuationToken",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$maxPageSize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ReportingWorkItemRevisionsBatch"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemRevisionsDiscussions",
        "x-ms-vss-method": "ReadReportingDiscussions",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/sendmail": {
      "post": {
        "tags": [
          "Send Mail"
        ],
        "description": "RESTful method to send mail for selected/queried work items.",
        "operationId": "Send Mail_Send Mail",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SendMailBody"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "sendMail",
        "x-ms-vss-method": "SendMailAsync",
        "x-ms-preview": true,
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/tags": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Get all the tags for the project.",
        "operationId": "Tags_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemTagDefinition"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "tags",
        "x-ms-vss-method": "GetTags",
        "x-ms-preview": true,
        "x-ms-examples": {
          "List of work item tags": {
            "$ref": "./httpExamples/tags/GET__list_of_wit_tags.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/tags/{tagIdOrName}": {
      "get": {
        "tags": [
          "Tags"
        ],
        "description": "Get the tag for the project.",
        "operationId": "Tags_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagIdOrName",
            "in": "path",
            "description": "Tag ID or tag name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTagDefinition"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "tags",
        "x-ms-vss-method": "GetTag",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get a work item tag": {
            "$ref": "./httpExamples/tags/GET__wit_tag.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Tags"
        ],
        "description": "Delete the tag for the project. Please note, that the deleted tag will be removed from all Work Items as well as Pull Requests.",
        "operationId": "Tags_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagIdOrName",
            "in": "path",
            "description": "Tag ID or tag name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "tags",
        "x-ms-vss-method": "DeleteTag",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Delete a work item tag": {
            "$ref": "./httpExamples/tags/DELETE__wit_tag.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Tags"
        ],
        "description": "Update the tag for the project.",
        "operationId": "Tags_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "tagIdOrName",
            "in": "path",
            "description": "Tag ID or tag name.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemTagDefinition"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTagDefinition"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "tags",
        "x-ms-vss-method": "UpdateTag",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Update a work item tag": {
            "$ref": "./httpExamples/tags/PATCH__wit_tag.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/tempqueries": {
      "post": {
        "tags": [
          "Temp Queries"
        ],
        "description": "Creates a temporary query\n\nLearn more about Work Item Query Language (WIQL) syntax [here](https://docs.microsoft.com/en-us/vsts/collaborate/wiql-syntax?toc=/vsts/work/track/toc.json&bc=/vsts/work/track/breadcrumb/toc.json&view=vsts).",
        "operationId": "Temp Queries_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The temporary query to create",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/TemporaryQueryRequestModel"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/TemporaryQueryResponseModel"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "tempQueries",
        "x-ms-vss-method": "CreateTempQuery",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Create a temporary query": {
            "$ref": "./httpExamples/tempQueries/POST__wit_tempQueries_create.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workitems": {
      "get": {
        "tags": [
          "Work Items"
        ],
        "description": "Returns a list of work items (Maximum 200)",
        "operationId": "Work Items_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "The comma-separated list of requested work item ids. (Maximum 200 ids allowed).",
            "required": true,
            "schema": {
              "type": "string",
              "format": "array (int32)"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated list of requested fields",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "asOf",
            "in": "query",
            "description": "AsOf UTC date time string",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "errorPolicy",
            "in": "query",
            "description": "The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}.",
            "schema": {
              "type": "string",
              "enum": [
                "fail",
                "omit"
              ],
              "x-ms-enum": {
                "name": "WorkItemErrorPolicy",
                "values": [
                  {
                    "value": "fail",
                    "description": "Fail work error policy."
                  },
                  {
                    "value": "omit",
                    "description": "Omit work error policy."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemErrorPolicy",
              "values": [
                {
                  "value": "fail",
                  "description": "Fail work error policy."
                },
                {
                  "value": "omit",
                  "description": "Omit work error policy."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItems",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get list of work items": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids_.json"
          },
          "Get list of work items, all expanded": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids___expand-all.json"
          },
          "Get list of work items for specific fields": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns_.json"
          },
          "Get list of work items as of specific datetime #1": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns__asOf-_asof_.json"
          },
          "Get list of work items as of specific datetime #2": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns__asOf-_asof_2.json"
          },
          "Get list of work items as of specific datetime #3": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns__asOf-_asof_3.json"
          },
          "Get list of work items as of specific datetime #4": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_ids-_ids__fields-_columns__asOf-_asof_4.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitems/${type}": {
      "get": {
        "tags": [
          "Work Items"
        ],
        "description": "Returns a single work item from a template.",
        "operationId": "Work Items_Get Work Item Template",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The work item type name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated list of requested fields",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "asOf",
            "in": "query",
            "description": "AsOf UTC date time string",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItemTemplate",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Returns a single work item from a template": {
            "$ref": "./httpExamples/workItems/GET_work_item_template.json"
          }
        }
      },
      "post": {
        "tags": [
          "Work Items"
        ],
        "description": "Creates a single work item.",
        "operationId": "Work Items_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The work item type of the work item to create",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "validateOnly",
            "in": "query",
            "description": "Indicate if you only want to validate the changes without saving the work item",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bypassRules",
            "in": "query",
            "description": "Do not enforce the work item type rules on this update",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "suppressNotifications",
            "in": "query",
            "description": "Do not fire any notifications for this change",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON Patch document representing the work item",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "CreateWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Create work item": {
            "$ref": "./httpExamples/workItems/POST__wit_workitems_create.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workitems/{id}": {
      "get": {
        "tags": [
          "Work Items"
        ],
        "description": "Returns a single work item.",
        "operationId": "Work Items_Get Work Item",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The work item id",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "fields",
            "in": "query",
            "description": "Comma-separated list of requested fields",
            "schema": {
              "type": "string",
              "format": "array (string)"
            }
          },
          {
            "name": "asOf",
            "in": "query",
            "description": "AsOf UTC date time string",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "GetWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get work item": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_id.json"
          },
          "Get work item with asOf parameter": {
            "$ref": "./httpExamples/workItems/GET__wit_WorkItems_id _asOf.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Work Items"
        ],
        "description": "Deletes the specified work item and sends it to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion. It is recommended NOT to use this parameter. If you do, please use this parameter with extreme caution.",
        "operationId": "Work Items_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "ID of the work item to be deleted",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "destroy",
            "in": "query",
            "description": "Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDelete"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "DeleteWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItems/DELETE__wit_workitems_id_.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Work Items"
        ],
        "description": "Updates a single work item.",
        "operationId": "Work Items_Update",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The id of the work item to update",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "validateOnly",
            "in": "query",
            "description": "Indicate if you only want to validate the changes without saving the work item",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "bypassRules",
            "in": "query",
            "description": "Do not enforce the work item type rules on this update",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "suppressNotifications",
            "in": "query",
            "description": "Do not fire any notifications for this change",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The JSON Patch document representing the update",
          "content": {
            "application/json-patch+json": {
              "schema": {
                "$ref": "#/components/schemas/JsonPatchDocument"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItems",
        "x-ms-vss-method": "UpdateWorkItem",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Update a field": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_.json"
          },
          "Update an identity field by IdentityRef": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_10.json"
          },
          "Update an identity field by display name": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_11.json"
          },
          "Update an identity field by distinct display name": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_12.json"
          },
          "Reset an identity field": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_13.json"
          },
          "Move work items (API Availability: Team Services only (not TFS))": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__bug1Id_.json"
          },
          "Change work item type (API Availability: Team Services only (not TFS))": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__bug1Id_2.json"
          },
          "Add a tag": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_9.json"
          },
          "Update a tag": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_14.json"
          },
          "Add a link": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_3.json"
          },
          "Update a link": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_4.json"
          },
          "Remove a link": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_5.json"
          },
          "Add an attachment": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_6.json"
          },
          "Remove an attachment": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_7.json"
          },
          "Add a hyperlink": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_8.json"
          },
          "Make an update bypassing rules": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId__bypassRules-true.json"
          },
          "Validate only update": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_validate_only.json"
          },
          "Add a Markdown comment": {
            "$ref": "./httpExamples/workItems/PATCH__wit_workitems__taskId_validate_only.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{id}/revisions": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "description": "Returns the list of fully hydrated work item revisions, paged.",
        "operationId": "Revisions_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetRevisions",
        "x-ms-preview": true,
        "x-ms-examples": {
          "List work item revisions": {
            "$ref": "./httpExamples/revisions/GET__list_workitem_revisions.json"
          },
          "List work item revisions with paging": {
            "$ref": "./httpExamples/revisions/GET__list_workitem_revisions_paged.json"
          },
          "List work item revisions (project scoped)": {
            "$ref": "./httpExamples/revisions/GET__list_workitem_revisions_project_scope.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{id}/revisions/{revisionNumber}": {
      "get": {
        "tags": [
          "Revisions"
        ],
        "description": "Returns a fully hydrated work item for the requested revision",
        "operationId": "Revisions_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "revisionNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$expand",
            "in": "query",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "relations",
                "fields",
                "links",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemExpand",
                "values": [
                  {
                    "value": "none",
                    "description": "Default behavior."
                  },
                  {
                    "value": "relations",
                    "description": "Relations work item expand."
                  },
                  {
                    "value": "fields",
                    "description": "Fields work item expand."
                  },
                  {
                    "value": "links",
                    "description": "Links work item expand."
                  },
                  {
                    "value": "all",
                    "description": "Expands all."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItem"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "revisions",
        "x-ms-vss-method": "GetRevision",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get work item revision": {
            "$ref": "./httpExamples/revisions/GET__workitem_revision.json"
          },
          "Get work item revision (project scoped)": {
            "$ref": "./httpExamples/revisions/GET__workitem_revision_project_scope.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{id}/updates": {
      "get": {
        "tags": [
          "Updates"
        ],
        "description": "Returns the deltas between work item revisions",
        "operationId": "Updates_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "$top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemUpdate"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "updates",
        "x-ms-vss-method": "GetUpdates",
        "x-ms-preview": true,
        "x-ms-examples": {
          "List of work item updates": {
            "$ref": "./httpExamples/updates/GET__list_of_workitem_updates.json"
          },
          "Paged list of work item updates": {
            "$ref": "./httpExamples/updates/GET__list_of_workitem_updates_paged.json"
          },
          "List of work item updates (project scoped)": {
            "$ref": "./httpExamples/updates/GET__list_of_workitem_updates_projectscope.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{id}/updates/{updateNumber}": {
      "get": {
        "tags": [
          "Updates"
        ],
        "description": "Returns a single update for a work item",
        "operationId": "Updates_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "updateNumber",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemUpdate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "updates",
        "x-ms-vss-method": "GetUpdate",
        "x-ms-preview": true,
        "x-ms-examples": {
          "work item update": {
            "$ref": "./httpExamples/updates/GET__work_item_update.json"
          },
          "work item update (project scoped)": {
            "$ref": "./httpExamples/updates/GET__work_item_update_project_scope.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments": {
      "get": {
        "tags": [
          "Comments"
        ],
        "description": "Returns a list of work item comments by ids.",
        "operationId": "Comments_Get Comments Batch",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "Id of a work item to get comments for.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "ids",
            "in": "query",
            "description": "Comma-separated list of comment ids to return.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "array (int32)"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Specify if the deleted comments should be retrieved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specifies the additional data retrieval options for work item comments.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "reactions",
                "renderedText",
                "renderedTextOnly",
                "all"
              ],
              "x-ms-enum": {
                "name": "CommentExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "reactions",
                    "description": "Include comment reactions."
                  },
                  {
                    "value": "renderedText",
                    "description": "Include the rendered text (html) in addition to MD text."
                  },
                  {
                    "value": "renderedTextOnly",
                    "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "CommentExpandOptions",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "reactions",
                  "description": "Include comment reactions."
                },
                {
                  "value": "renderedText",
                  "description": "Include the rendered text (html) in addition to MD text."
                },
                {
                  "value": "renderedTextOnly",
                  "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                },
                {
                  "value": "all",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentList"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "GetCommentsBatch",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get a list of comments by ids": {
            "$ref": "./httpExamples/comments/GET__wit_workitems__issueId__comments_3.json"
          }
        }
      },
      "post": {
        "tags": [
          "Comments"
        ],
        "description": "Add a comment on a work item.",
        "operationId": "Comments_Add Comment",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "Id of a work item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Comment create request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentCreate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "AddComment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Add a comment": {
            "$ref": "./httpExamples/comments/POST__wit_workitems__taskId__comments_create.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}": {
      "get": {
        "tags": [
          "Comments"
        ],
        "description": "Returns a work item comment.",
        "operationId": "Comments_Get Comment",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "Id of a work item to get the comment.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Id of the comment to return.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Specify if the deleted comment should be retrieved.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Specifies the additional data retrieval options for work item comments.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "reactions",
                "renderedText",
                "renderedTextOnly",
                "all"
              ],
              "x-ms-enum": {
                "name": "CommentExpandOptions",
                "values": [
                  {
                    "value": "none",
                    "description": ""
                  },
                  {
                    "value": "reactions",
                    "description": "Include comment reactions."
                  },
                  {
                    "value": "renderedText",
                    "description": "Include the rendered text (html) in addition to MD text."
                  },
                  {
                    "value": "renderedTextOnly",
                    "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                  },
                  {
                    "value": "all",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "CommentExpandOptions",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "reactions",
                  "description": "Include comment reactions."
                },
                {
                  "value": "renderedText",
                  "description": "Include the rendered text (html) in addition to MD text."
                },
                {
                  "value": "renderedTextOnly",
                  "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                },
                {
                  "value": "all",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "GetComment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get a comment": {
            "$ref": "./httpExamples/comments/GET__wit_workitems__issueId__comments__commentId_1.json"
          }
        }
      },
      "delete": {
        "tags": [
          "Comments"
        ],
        "description": "Delete a comment on a work item.",
        "operationId": "Comments_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "Id of a work item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "DeleteComment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Delete a comment": {
            "$ref": "./httpExamples/comments/DELETE__wit_workitems__taskId__comments_1.json"
          }
        }
      },
      "patch": {
        "tags": [
          "Comments"
        ],
        "description": "Update a comment on a work item.",
        "operationId": "Comments_Update Comment",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "Id of a work item.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Comment update request.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CommentUpdate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Comment"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "UpdateComment",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Update a comment": {
            "$ref": "./httpExamples/comments/PATCH__wit_workitems__taskId__comments_1.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions": {
      "get": {
        "tags": [
          "Comments Reactions"
        ],
        "description": "Gets reactions of a comment.",
        "operationId": "Comments Reactions_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "WorkItem ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentReaction"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentsReactions",
        "x-ms-vss-method": "GetCommentReactions",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions/{reactionType}": {
      "put": {
        "tags": [
          "Comments Reactions"
        ],
        "description": "Adds a new reaction to a comment.",
        "operationId": "Comments Reactions_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "WorkItem ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionType",
            "in": "path",
            "description": "Type of the reaction",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "like",
                "dislike",
                "heart",
                "hooray",
                "smile",
                "confused"
              ],
              "x-ms-enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "CommentReactionType",
              "values": [
                {
                  "value": "like",
                  "description": ""
                },
                {
                  "value": "dislike",
                  "description": ""
                },
                {
                  "value": "heart",
                  "description": ""
                },
                {
                  "value": "hooray",
                  "description": ""
                },
                {
                  "value": "smile",
                  "description": ""
                },
                {
                  "value": "confused",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentReaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentsReactions",
        "x-ms-vss-method": "CreateCommentReaction",
        "x-ms-preview": true
      },
      "delete": {
        "tags": [
          "Comments Reactions"
        ],
        "description": "Deletes an existing reaction on a comment.",
        "operationId": "Comments Reactions_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "WorkItem ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment ID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionType",
            "in": "path",
            "description": "Type of the reaction",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "like",
                "dislike",
                "heart",
                "hooray",
                "smile",
                "confused"
              ],
              "x-ms-enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "CommentReactionType",
              "values": [
                {
                  "value": "like",
                  "description": ""
                },
                {
                  "value": "dislike",
                  "description": ""
                },
                {
                  "value": "heart",
                  "description": ""
                },
                {
                  "value": "hooray",
                  "description": ""
                },
                {
                  "value": "smile",
                  "description": ""
                },
                {
                  "value": "confused",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentReaction"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentsReactions",
        "x-ms-vss-method": "DeleteCommentReaction",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/reactions/{reactionType}/users": {
      "get": {
        "tags": [
          "Comment Reactions Engaged Users"
        ],
        "description": "Get users who reacted on the comment.",
        "operationId": "Comment Reactions Engaged Users_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "description": "WorkItem ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "description": "Comment ID.",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "reactionType",
            "in": "path",
            "description": "Type of the reaction.",
            "required": true,
            "schema": {
              "type": "string",
              "enum": [
                "like",
                "dislike",
                "heart",
                "hooray",
                "smile",
                "confused"
              ],
              "x-ms-enum": {
                "name": "CommentReactionType",
                "values": [
                  {
                    "value": "like",
                    "description": ""
                  },
                  {
                    "value": "dislike",
                    "description": ""
                  },
                  {
                    "value": "heart",
                    "description": ""
                  },
                  {
                    "value": "hooray",
                    "description": ""
                  },
                  {
                    "value": "smile",
                    "description": ""
                  },
                  {
                    "value": "confused",
                    "description": ""
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "CommentReactionType",
              "values": [
                {
                  "value": "like",
                  "description": ""
                },
                {
                  "value": "dislike",
                  "description": ""
                },
                {
                  "value": "heart",
                  "description": ""
                },
                {
                  "value": "hooray",
                  "description": ""
                },
                {
                  "value": "smile",
                  "description": ""
                },
                {
                  "value": "confused",
                  "description": ""
                }
              ]
            }
          },
          {
            "name": "$top",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "$skip",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/IdentityRef"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentReactionsEngagedUsers",
        "x-ms-vss-method": "GetEngagedUsers",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/versions": {
      "get": {
        "tags": [
          "Comments Versions"
        ],
        "operationId": "Comments Versions_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CommentVersion"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentsVersions",
        "x-ms-vss-method": "GetCommentVersions",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}/versions/{version}": {
      "get": {
        "tags": [
          "Comments Versions"
        ],
        "operationId": "Comments Versions_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workItemId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "commentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "version",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CommentVersion"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "commentsVersions",
        "x-ms-vss-method": "GetCommentVersion",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/_apis/wit/workitemsbatch": {
      "post": {
        "tags": [
          "Work Items"
        ],
        "description": "Gets work items for a list of work item ids (Maximum 200)",
        "operationId": "Work Items_Get Work Items Batch",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemBatchGetRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItem"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemsBatch",
        "x-ms-vss-method": "GetWorkItemsBatch",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get list of work items for specific fields": {
            "$ref": "./httpExamples/workItemsBatch/POST__wit_WorkItemsBatch_ids-_ids__fields-_columns_.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workitemsdelete": {
      "post": {
        "tags": [
          "Work Items"
        ],
        "description": "Deletes specified work items and sends them to the Recycle Bin, so that it can be restored back, if required. Optionally, if the destroy parameter has been set to true, it destroys the work item permanently. WARNING: If the destroy parameter is set to true, work items deleted by this command will NOT go to recycle-bin and there is no way to restore/recover them after deletion.",
        "operationId": "Work Items_Delete Work Items",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemDeleteBatchRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemDeleteBatch"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemsDelete",
        "x-ms-vss-method": "DeleteWorkItems",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemsDelete/POST__wit_workitems_delete.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypecategories": {
      "get": {
        "tags": [
          "Work Item Type Categories"
        ],
        "description": "Get all work item type categories.",
        "operationId": "Work Item Type Categories_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemTypeCategory"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemTypeCategories",
        "x-ms-vss-method": "GetWorkItemTypeCategories",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemTypeCategories/GET__wit_workItemTypeCategories.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypecategories/{category}": {
      "get": {
        "tags": [
          "Work Item Type Categories"
        ],
        "description": "Get specific work item type category by name.",
        "operationId": "Work Item Type Categories_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "category",
            "in": "path",
            "description": "The category name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTypeCategory"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemTypeCategories",
        "x-ms-vss-method": "GetWorkItemTypeCategory",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get category by name": {
            "$ref": "./httpExamples/workItemTypeCategories/GET__wit_workItemTypeCategories__categoryName_.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypes": {
      "get": {
        "tags": [
          "Work Item Types"
        ],
        "description": "Returns the list of work item types",
        "operationId": "Work Item Types_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemType"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemTypes",
        "x-ms-vss-method": "GetWorkItemTypes",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemTypes/GET__wit_workItemTypes.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypes/{type}": {
      "get": {
        "tags": [
          "Work Item Types"
        ],
        "description": "Returns a work item type definition.",
        "operationId": "Work Item Types_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Work item type name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemType"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "workItemTypes",
        "x-ms-vss-method": "GetWorkItemType",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/workItemTypes/GET__wit_workItemTypes_Bug.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypes/{type}/fields": {
      "get": {
        "tags": [
          "Work Item Types Field"
        ],
        "description": "Get a list of fields for a work item type with detailed references.",
        "operationId": "Work Item Types Field_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Work item type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "allowedValues",
                "dependentFields",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemTypeFieldsExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "Includes only basic properties of the field."
                  },
                  {
                    "value": "allowedValues",
                    "description": "Includes allowed values for the field."
                  },
                  {
                    "value": "dependentFields",
                    "description": "Includes dependent fields of the field."
                  },
                  {
                    "value": "all",
                    "description": "Includes allowed values and dependent fields of the field."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemTypeFieldsExpandLevel",
              "values": [
                {
                  "value": "none",
                  "description": "Includes only basic properties of the field."
                },
                {
                  "value": "allowedValues",
                  "description": "Includes allowed values for the field."
                },
                {
                  "value": "dependentFields",
                  "description": "Includes dependent fields of the field."
                },
                {
                  "value": "all",
                  "description": "Includes allowed values and dependent fields of the field."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemTypeFieldWithReferences"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItemTypesField",
        "x-ms-vss-method": "GetWorkItemTypeFieldsWithReferences",
        "x-ms-preview": true,
        "x-ms-examples": {
          "1. Get list of project scoped work item type fields data": {
            "$ref": "./httpExamples/workItemTypesField/GET__workItemType_fields.json"
          },
          "2. Get list of project scoped work item type fields data with expand option": {
            "$ref": "./httpExamples/workItemTypesField/GET__workItemType_fields_expand.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypes/{type}/fields/{field}": {
      "get": {
        "tags": [
          "Work Item Types Field"
        ],
        "description": "Get a field for a work item type with detailed references.",
        "operationId": "Work Item Types Field_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "Work item type.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "field",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "$expand",
            "in": "query",
            "description": "Expand level for the API response. Properties: to include allowedvalues, default value, isRequired etc. as a part of response; None: to skip these properties.",
            "schema": {
              "type": "string",
              "enum": [
                "none",
                "allowedValues",
                "dependentFields",
                "all"
              ],
              "x-ms-enum": {
                "name": "WorkItemTypeFieldsExpandLevel",
                "values": [
                  {
                    "value": "none",
                    "description": "Includes only basic properties of the field."
                  },
                  {
                    "value": "allowedValues",
                    "description": "Includes allowed values for the field."
                  },
                  {
                    "value": "dependentFields",
                    "description": "Includes dependent fields of the field."
                  },
                  {
                    "value": "all",
                    "description": "Includes allowed values and dependent fields of the field."
                  }
                ]
              }
            },
            "x-ms-enum": {
              "name": "WorkItemTypeFieldsExpandLevel",
              "values": [
                {
                  "value": "none",
                  "description": "Includes only basic properties of the field."
                },
                {
                  "value": "allowedValues",
                  "description": "Includes allowed values for the field."
                },
                {
                  "value": "dependentFields",
                  "description": "Includes dependent fields of the field."
                },
                {
                  "value": "all",
                  "description": "Includes allowed values and dependent fields of the field."
                }
              ]
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTypeFieldWithReferences"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.3",
        "x-ms-vss-resource": "workItemTypesField",
        "x-ms-vss-method": "GetWorkItemTypeFieldWithReferences",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get project scoped work item type field data": {
            "$ref": "./httpExamples/workItemTypesField/GET__workItemType_field.json"
          },
          "Get project scoped work item type field data with expand option": {
            "$ref": "./httpExamples/workItemTypesField/GET__workItemType_field_expand.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workitemtypes/{type}/states": {
      "get": {
        "tags": [
          "Work Item Type States"
        ],
        "description": "Returns the state names and colors for a work item type.",
        "operationId": "Work Item Type States_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "type",
            "in": "path",
            "description": "The state name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemStateColor"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "workItemTypeStates",
        "x-ms-vss-method": "GetWorkItemTypeStates",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get work item type states": {
            "$ref": "./httpExamples/workItemTypeStates/GET__workitem_type_states.json"
          }
        }
      }
    },
    "/{organization}/{project}/{team}/_apis/wit/templates": {
      "get": {
        "tags": [
          "Templates"
        ],
        "description": "Gets template",
        "operationId": "Templates_List",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "workitemtypename",
            "in": "query",
            "description": "Optional, When specified returns templates for given Work item type.",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WorkItemTemplateReference"
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "GetTemplates",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Gets templates": {
            "$ref": "./httpExamples/templates/GET_templates.json"
          }
        }
      },
      "post": {
        "tags": [
          "Templates"
        ],
        "description": "Creates a template",
        "operationId": "Templates_Create",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Template contents",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "CreateTemplate",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Creates a template": {
            "$ref": "./httpExamples/templates/Create_template.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/{team}/_apis/wit/templates/{templateId}": {
      "get": {
        "tags": [
          "Templates"
        ],
        "description": "Gets the template with specified id",
        "operationId": "Templates_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "Template Id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "GetTemplate",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Gets the template with specified id": {
            "$ref": "./httpExamples/templates/GET_template.json"
          }
        }
      },
      "put": {
        "tags": [
          "Templates"
        ],
        "description": "Replace template contents",
        "operationId": "Templates_Replace Template",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Template contents to replace with",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/WorkItemTemplate"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemTemplate"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "ReplaceTemplate",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Replace template contents": {
            "$ref": "./httpExamples/templates/PUT_template.json"
          }
        },
        "x-codegen-request-body-name": "body"
      },
      "delete": {
        "tags": [
          "Templates"
        ],
        "description": "Deletes the template with given id",
        "operationId": "Templates_Delete",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "templateId",
            "in": "path",
            "description": "Template id",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {}
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.1",
        "x-ms-vss-resource": "templates",
        "x-ms-vss-method": "DeleteTemplate",
        "x-ms-preview": true
      }
    },
    "/{organization}/{project}/{team}/_apis/wit/wiql": {
      "post": {
        "tags": [
          "Wiql"
        ],
        "description": "Gets the results of the query given its WIQL.",
        "operationId": "Wiql_Query By Wiql",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "timePrecision",
            "in": "query",
            "description": "Whether or not to use time precision.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "The query containing the WIQL.",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Wiql"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemQueryResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryByWiql",
        "x-ms-preview": true,
        "x-ms-examples": {
          "Get results of a flat work item query.": {
            "$ref": "./httpExamples/wiql/GET__wit_get_id_workitems.json"
          }
        },
        "x-codegen-request-body-name": "body"
      }
    },
    "/{organization}/{project}/{team}/_apis/wit/wiql/{id}": {
      "get": {
        "tags": [
          "Wiql"
        ],
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Wiql_Query By Id",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The query ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "timePrecision",
            "in": "query",
            "description": "Whether or not to use time precision.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/WorkItemQueryResult"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryById",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/wiql/GET__wit_wiql__queryId_.json"
          }
        }
      },
      "head": {
        "tags": [
          "Wiql"
        ],
        "description": "Gets the results of the query given the query ID.",
        "operationId": "Wiql_Get",
        "parameters": [
          {
            "name": "organization",
            "in": "path",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "id",
            "in": "path",
            "description": "The query ID.",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          },
          {
            "name": "project",
            "in": "path",
            "description": "Project ID or project name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "team",
            "in": "path",
            "description": "Team ID or team name",
            "required": true,
            "schema": {
              "type": "string",
              "x-ms-required": false
            },
            "x-ms-required": false
          },
          {
            "name": "timePrecision",
            "in": "query",
            "description": "Whether or not to use time precision.",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "$top",
            "in": "query",
            "description": "The max number of results to return.",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "api-version",
            "in": "query",
            "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "wiql",
        "x-ms-vss-method": "QueryById",
        "x-ms-preview": true,
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/wiql/GET__wit_wiql__queryId_.json"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AccountMyWorkResult": {
        "type": "object",
        "properties": {
          "querySizeLimitExceeded": {
            "type": "boolean",
            "description": "True, when length of WorkItemDetails is same as the limit"
          },
          "workItemDetails": {
            "type": "array",
            "description": "WorkItem Details",
            "items": {
              "$ref": "#/components/schemas/AccountWorkWorkItemModel"
            }
          }
        },
        "description": ""
      },
      "AccountRecentActivityWorkItemModel": {
        "properties": {
          "assignedTo": {
            "type": "string",
            "description": "Assigned To"
          }
        },
        "description": "Represents Work Item Recent Activity",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountRecentActivityWorkItemModelBase"
          }
        ]
      },
      "AccountRecentActivityWorkItemModel2": {
        "properties": {
          "assignedTo": {
            "$ref": "#/components/schemas/IdentityRef"
          }
        },
        "description": "Represents Work Item Recent Activity",
        "allOf": [
          {
            "$ref": "#/components/schemas/AccountRecentActivityWorkItemModelBase"
          }
        ]
      },
      "AccountRecentActivityWorkItemModelBase": {
        "type": "object",
        "properties": {
          "activityDate": {
            "type": "string",
            "description": "Date of the last Activity by the user",
            "format": "date-time"
          },
          "activityType": {
            "type": "string",
            "description": "Type of the activity",
            "enum": [
              "visited",
              "edited",
              "deleted",
              "restored"
            ],
            "x-ms-enum": {
              "name": "WorkItemRecentActivityType",
              "values": [
                {
                  "value": "visited",
                  "description": ""
                },
                {
                  "value": "edited",
                  "description": ""
                },
                {
                  "value": "deleted",
                  "description": ""
                },
                {
                  "value": "restored",
                  "description": ""
                }
              ]
            }
          },
          "changedDate": {
            "type": "string",
            "description": "Last changed date of the work item",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "description": "Work Item Id",
            "format": "int32"
          },
          "identityId": {
            "type": "string",
            "description": "TeamFoundationId of the user this activity belongs to",
            "format": "uuid"
          },
          "state": {
            "type": "string",
            "description": "State of the work item"
          },
          "teamProject": {
            "type": "string",
            "description": "Team project the work item belongs to"
          },
          "title": {
            "type": "string",
            "description": "Title of the work item"
          },
          "workItemType": {
            "type": "string",
            "description": "Type of Work Item"
          }
        },
        "description": "Represents Work Item Recent Activity"
      },
      "AccountRecentMentionWorkItemModel": {
        "type": "object",
        "properties": {
          "assignedTo": {
            "type": "string",
            "description": "Assigned To"
          },
          "id": {
            "type": "integer",
            "description": "Work Item Id",
            "format": "int32"
          },
          "mentionedDateField": {
            "type": "string",
            "description": "Latest date that the user were mentioned",
            "format": "date-time"
          },
          "state": {
            "type": "string",
            "description": "State of the work item"
          },
          "teamProject": {
            "type": "string",
            "description": "Team project the work item belongs to"
          },
          "title": {
            "type": "string",
            "description": "Title of the work item"
          },
          "workItemType": {
            "type": "string",
            "description": "Type of Work Item"
          }
        },
        "description": "Represents Recent Mention Work Item"
      },
      "AccountWorkWorkItemModel": {
        "type": "object",
        "properties": {
          "assignedTo": {
            "type": "string"
          },
          "changedDate": {
            "type": "string",
            "format": "date-time"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string"
          },
          "teamProject": {
            "type": "string"
          },
          "title": {
            "type": "string"
          },
          "workItemType": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ArtifactUriQuery": {
        "type": "object",
        "properties": {
          "artifactUris": {
            "type": "array",
            "description": "List of artifact URIs to use for querying work items.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Contains criteria for querying work items based on artifact URI."
      },
      "ArtifactUriQueryResult": {
        "type": "object",
        "properties": {
          "artifactUrisQueryResult": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemReference"
              }
            },
            "description": "A Dictionary that maps a list of work item references to the given list of artifact URI."
          }
        },
        "description": "Defines result of artifact URI query on work items. Contains mapping of work item IDs to artifact URI."
      },
      "AttachmentReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "url": {
            "type": "string"
          }
        },
        "description": ""
      },
      "Comment": {
        "properties": {
          "createdBy": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the comment.",
            "format": "date-time"
          },
          "createdOnBehalfDate": {
            "type": "string",
            "description": "Effective Date/time value for adding the comment. Can be optionally different from CreatedDate.",
            "format": "date-time"
          },
          "createdOnBehalfOf": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "format": {
            "type": "string",
            "description": "Represents the possible types for the comment format.",
            "enum": [
              "markdown",
              "html"
            ],
            "x-ms-enum": {
              "name": "CommentFormat",
              "values": [
                {
                  "value": "markdown",
                  "description": ""
                },
                {
                  "value": "html",
                  "description": ""
                }
              ]
            }
          },
          "id": {
            "type": "integer",
            "description": "The id assigned to the comment.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates if the comment has been deleted."
          },
          "mentions": {
            "type": "array",
            "description": "The mentions of the comment.",
            "items": {
              "$ref": "#/components/schemas/CommentMention"
            }
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "modifiedDate": {
            "type": "string",
            "description": "The last modification date of the comment.",
            "format": "date-time"
          },
          "reactions": {
            "type": "array",
            "description": "The reactions of the comment.",
            "items": {
              "$ref": "#/components/schemas/CommentReaction"
            }
          },
          "renderedText": {
            "type": "string",
            "description": "The text of the comment in HTML format."
          },
          "text": {
            "type": "string",
            "description": "The text of the comment."
          },
          "version": {
            "type": "integer",
            "description": "The current version of the comment.",
            "format": "int32"
          },
          "workItemId": {
            "type": "integer",
            "description": "The id of the work item this comment belongs to.",
            "format": "int32"
          }
        },
        "description": "Comment on a Work Item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "CommentCreate": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The text of the comment."
          }
        },
        "description": "Represents a request to create a work item comment."
      },
      "CommentList": {
        "properties": {
          "comments": {
            "type": "array",
            "description": "List of comments in the current batch.",
            "items": {
              "$ref": "#/components/schemas/Comment"
            }
          },
          "continuationToken": {
            "type": "string",
            "description": "A string token that can be used to retrieving next page of comments if available. Otherwise null."
          },
          "count": {
            "type": "integer",
            "description": "The count of comments in the current batch.",
            "format": "int32"
          },
          "nextPage": {
            "type": "string",
            "description": "Uri to the next page of comments if it is available. Otherwise null."
          },
          "totalCount": {
            "type": "integer",
            "description": "Total count of comments on a work item.",
            "format": "int32"
          }
        },
        "description": "Represents a list of work item comments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "CommentMention": {
        "properties": {
          "artifactId": {
            "type": "string",
            "description": "The artifact portion of the parsed text. (i.e. the work item's id)"
          },
          "artifactType": {
            "type": "string",
            "description": "The type the parser assigned to the mention. (i.e. person, work item, etc)"
          },
          "commentId": {
            "type": "integer",
            "description": "The comment id of the mention.",
            "format": "int32"
          },
          "targetId": {
            "type": "string",
            "description": "The resolved target of the mention. An example of this could be a user's tfid"
          }
        },
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "CommentReaction": {
        "properties": {
          "commentId": {
            "type": "integer",
            "description": "The id of the comment this reaction belongs to.",
            "format": "int32"
          },
          "count": {
            "type": "integer",
            "description": "Total number of reactions for the CommentReactionType.",
            "format": "int32"
          },
          "isCurrentUserEngaged": {
            "type": "boolean",
            "description": "Flag to indicate if the current user has engaged on this particular EngagementType (e.g. if they liked the associated comment)."
          },
          "type": {
            "type": "string",
            "description": "Type of the reaction.",
            "enum": [
              "like",
              "dislike",
              "heart",
              "hooray",
              "smile",
              "confused"
            ],
            "x-ms-enum": {
              "name": "CommentReactionType",
              "values": [
                {
                  "value": "like",
                  "description": ""
                },
                {
                  "value": "dislike",
                  "description": ""
                },
                {
                  "value": "heart",
                  "description": ""
                },
                {
                  "value": "hooray",
                  "description": ""
                },
                {
                  "value": "smile",
                  "description": ""
                },
                {
                  "value": "confused",
                  "description": ""
                }
              ]
            }
          }
        },
        "description": "Contains information about work item comment reaction for a particular reaction type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "CommentUpdate": {
        "type": "object",
        "properties": {
          "text": {
            "type": "string",
            "description": "The updated text of the comment."
          }
        },
        "description": "Represents a request to update a work item comment."
      },
      "CommentVersion": {
        "properties": {
          "createdBy": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "createdDate": {
            "type": "string",
            "description": "The creation date of the comment.",
            "format": "date-time"
          },
          "createdOnBehalfDate": {
            "type": "string",
            "description": "Effective Date/time value for adding the comment. Can be optionally different from CreatedDate.",
            "format": "date-time"
          },
          "createdOnBehalfOf": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "id": {
            "type": "integer",
            "description": "The id assigned to the comment.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates if the comment has been deleted at this version."
          },
          "modifiedBy": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "modifiedDate": {
            "type": "string",
            "description": "The modification date of the comment for this version.",
            "format": "date-time"
          },
          "renderedText": {
            "type": "string",
            "description": "The rendered content of the comment at this version."
          },
          "text": {
            "type": "string",
            "description": "The text of the comment at this version."
          },
          "version": {
            "type": "integer",
            "description": "The version number.",
            "format": "int32"
          }
        },
        "description": "Represents a specific version of a comment on a work item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "DestroyedAttachment": {
        "type": "object",
        "properties": {
          "affectedWorkItems": {
            "type": "array",
            "description": "Work items with attachment references that have been marked as deleted.",
            "items": {
              "$ref": "#/components/schemas/WorkItemReference"
            }
          },
          "attachment": {
            "$ref": "#/components/schemas/AttachmentReference"
          }
        },
        "description": "Describes permanently deleted attachment and work items that had links to this attachment."
      },
      "EmailRecipients": {
        "type": "object",
        "properties": {
          "emailAddresses": {
            "type": "array",
            "description": "Plaintext email addresses.",
            "items": {
              "type": "string"
            }
          },
          "tfIds": {
            "type": "array",
            "description": "TfIds",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          },
          "unresolvedEntityIds": {
            "type": "array",
            "description": "Unresolved entity ids",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": ""
      },
      "ExternalDeployment": {
        "type": "object",
        "properties": {
          "artifactId": {
            "type": "string",
            "format": "uuid"
          },
          "createdBy": {
            "type": "string",
            "format": "uuid"
          },
          "description": {
            "type": "string"
          },
          "displayName": {
            "type": "string"
          },
          "environment": {
            "$ref": "#/components/schemas/ExternalEnvironment"
          },
          "group": {
            "type": "string"
          },
          "pipeline": {
            "$ref": "#/components/schemas/ExternalPipeline"
          },
          "relatedWorkItemIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "runId": {
            "type": "integer",
            "format": "int32"
          },
          "sequenceNumber": {
            "type": "integer",
            "format": "int32"
          },
          "status": {
            "type": "string"
          },
          "statusDate": {
            "type": "string",
            "format": "date-time"
          },
          "url": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ExternalEnvironment": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "description": ""
      },
      "ExternalPipeline": {
        "type": "object",
        "properties": {
          "displayName": {
            "type": "string"
          },
          "id": {
            "type": "integer",
            "format": "int32"
          },
          "url": {
            "type": "string"
          }
        },
        "description": ""
      },
      "FieldDependentRule": {
        "properties": {
          "dependentFields": {
            "type": "array",
            "description": "The dependent fields.",
            "items": {
              "$ref": "#/components/schemas/WorkItemFieldReference"
            }
          }
        },
        "description": "Describes a list of dependent fields for a rule.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "FieldUpdate": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether the user wants to restore the field."
          },
          "isLocked": {
            "type": "boolean",
            "description": "Indicates whether the user wants to lock the field."
          }
        },
        "description": "Describes an update request for a work item field."
      },
      "GitHubConnectionModel": {
        "type": "object",
        "properties": {
          "authorizationType": {
            "type": "string",
            "description": "Github connection authorization type (f. e. PAT, OAuth)"
          },
          "createdBy": {
            "$ref": "#/components/schemas/IdentityRef"
          },
          "id": {
            "type": "string",
            "description": "Github connection id",
            "format": "uuid"
          },
          "isConnectionValid": {
            "type": "boolean",
            "description": "Whether current Github connection is valid or not"
          },
          "name": {
            "type": "string",
            "description": "Github connection name (should contain organization/user name)"
          }
        },
        "description": "Describes Github connection."
      },
      "GitHubConnectionRepoModel": {
        "type": "object",
        "properties": {
          "errorMessage": {
            "type": "string",
            "description": "Error message"
          },
          "gitHubRepositoryUrl": {
            "type": "string",
            "description": "Repository web url"
          }
        },
        "description": "Describes Github connection's repo."
      },
      "GitHubConnectionReposBatchRequest": {
        "type": "object",
        "properties": {
          "gitHubRepositoryUrls": {
            "type": "array",
            "description": "Requested repos urls",
            "items": {
              "$ref": "#/components/schemas/GitHubConnectionRepoModel"
            }
          },
          "operationType": {
            "type": "string",
            "description": "Operation type (f. e. add, remove)"
          }
        },
        "description": "Describes Github connection's repo bulk request"
      },
      "GraphSubjectBase": {
        "type": "object",
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/ReferenceLinks"
          },
          "descriptor": {
            "type": "string",
            "description": "The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the same graph subject across both Accounts and Organizations."
          },
          "displayName": {
            "type": "string",
            "description": "This is the non-unique display name of the graph subject. To change this field, you must alter its value in the source provider."
          },
          "url": {
            "type": "string",
            "description": "This url is the full route to the source resource of this graph subject."
          }
        },
        "description": ""
      },
      "IdentityRef": {
        "properties": {
          "directoryAlias": {
            "type": "string",
            "description": "Deprecated - Can be retrieved by querying the Graph user referenced in the \"self\" entry of the IdentityRef \"_links\" dictionary"
          },
          "id": {
            "type": "string"
          },
          "imageUrl": {
            "type": "string",
            "description": "Deprecated - Available in the \"avatar\" entry of the IdentityRef \"_links\" dictionary"
          },
          "inactive": {
            "type": "boolean",
            "description": "Deprecated - Can be retrieved by querying the Graph membership state referenced in the \"membershipState\" entry of the GraphUser \"_links\" dictionary"
          },
          "isAadIdentity": {
            "type": "boolean",
            "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsAadUserType/Descriptor.IsAadGroupType)"
          },
          "isContainer": {
            "type": "boolean",
            "description": "Deprecated - Can be inferred from the subject type of the descriptor (Descriptor.IsGroupType)"
          },
          "isDeletedInOrigin": {
            "type": "boolean"
          },
          "profileUrl": {
            "type": "string",
            "description": "Deprecated - not in use in most preexisting implementations of ToIdentityRef"
          },
          "uniqueName": {
            "type": "string",
            "description": "Deprecated - use Domain+PrincipalName instead"
          }
        },
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/GraphSubjectBase"
          }
        ]
      },
      "IdentityReference": {
        "properties": {
          "id": {
            "type": "string",
            "description": "Gets or sets the identifier of the identity.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Legacy back-compat property. This has been the WIT specific value from Constants. Will be hidden (but exists) on the client unless they are targeting the newest version"
          }
        },
        "description": "Describes a reference to an identity.",
        "allOf": [
          {
            "$ref": "#/components/schemas/IdentityRef"
          }
        ]
      },
      "JsonPatchDocument": {
        "description": "The JSON model for JSON Patch Operations",
        "allOf": [
          {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/JsonPatchOperation"
            }
          }
        ]
      },
      "JsonPatchOperation": {
        "type": "object",
        "properties": {
          "from": {
            "type": "string",
            "description": "The path to copy from for the Move/Copy operation."
          },
          "op": {
            "type": "string",
            "description": "The patch operation",
            "enum": [
              "add",
              "remove",
              "replace",
              "move",
              "copy",
              "test"
            ],
            "x-ms-enum": {
              "name": "Operation",
              "values": [
                {
                  "value": "add",
                  "description": ""
                },
                {
                  "value": "remove",
                  "description": ""
                },
                {
                  "value": "replace",
                  "description": ""
                },
                {
                  "value": "move",
                  "description": ""
                },
                {
                  "value": "copy",
                  "description": ""
                },
                {
                  "value": "test",
                  "description": ""
                }
              ]
            }
          },
          "path": {
            "type": "string",
            "description": "The path for the operation. In the case of an array, a zero based index can be used to specify the position in the array (e.g. /biscuits/0/name). The \"-\" character can be used instead of an index to insert at the end of the array (e.g. /biscuits/-)."
          },
          "value": {
            "type": "object",
            "properties": {},
            "description": "The value for the operation. This is either a primitive or a JToken."
          }
        },
        "description": "The JSON model for a JSON Patch operation"
      },
      "Link": {
        "type": "object",
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Collection of link attributes."
          },
          "rel": {
            "type": "string",
            "description": "Relation type."
          },
          "url": {
            "type": "string",
            "description": "Link url."
          }
        },
        "description": "Link description."
      },
      "MailMessage": {
        "type": "object",
        "properties": {
          "body": {
            "type": "string",
            "description": "The mail body in HTML format."
          },
          "cc": {
            "$ref": "#/components/schemas/EmailRecipients"
          },
          "inReplyTo": {
            "type": "string",
            "description": "The in-reply-to header value"
          },
          "messageId": {
            "type": "string",
            "description": "The Message Id value"
          },
          "replyTo": {
            "$ref": "#/components/schemas/EmailRecipients"
          },
          "subject": {
            "type": "string",
            "description": "The mail subject."
          },
          "to": {
            "$ref": "#/components/schemas/EmailRecipients"
          }
        },
        "description": ""
      },
      "ProcessIdModel": {
        "type": "object",
        "properties": {
          "typeId": {
            "type": "string",
            "description": "The ID of the process.",
            "format": "uuid"
          }
        },
        "description": "Stores process ID."
      },
      "ProcessMigrationResultModel": {
        "type": "object",
        "properties": {
          "processId": {
            "type": "string",
            "description": "The ID of the process.",
            "format": "uuid"
          },
          "projectId": {
            "type": "string",
            "description": "The ID of the project.",
            "format": "uuid"
          }
        },
        "description": "Stores project ID and its process ID."
      },
      "ProjectWorkItemStateColors": {
        "type": "object",
        "properties": {
          "projectName": {
            "type": "string",
            "description": "Project name"
          },
          "workItemTypeStateColors": {
            "type": "array",
            "description": "State colors for all work item type in a project",
            "items": {
              "$ref": "#/components/schemas/WorkItemTypeStateColors"
            }
          }
        },
        "description": "Project work item type state colors"
      },
      "ProvisioningResult": {
        "type": "object",
        "properties": {
          "provisioningImportEvents": {
            "type": "array",
            "description": "Details about of the provisioning import events.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "Result of an update work item type XML update operation."
      },
      "QueryBatchGetRequest": {
        "type": "object",
        "properties": {
          "$expand": {
            "type": "string",
            "description": "The expand parameters for queries. Possible options are { None, Wiql, Clauses, All, Minimal }",
            "enum": [
              "none",
              "wiql",
              "clauses",
              "all",
              "minimal"
            ],
            "x-ms-enum": {
              "name": "QueryExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Expands Columns, Links and ChangeInfo"
                },
                {
                  "value": "wiql",
                  "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                },
                {
                  "value": "clauses",
                  "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                },
                {
                  "value": "all",
                  "description": "Expands all properties"
                },
                {
                  "value": "minimal",
                  "description": "Displays minimal properties and the WIQL text"
                }
              ]
            }
          },
          "errorPolicy": {
            "type": "string",
            "description": "The flag to control error policy in a query batch request. Possible options are { Fail, Omit }.",
            "enum": [
              "fail",
              "omit"
            ],
            "x-ms-enum": {
              "name": "QueryErrorPolicy",
              "values": [
                {
                  "value": "fail",
                  "description": ""
                },
                {
                  "value": "omit",
                  "description": ""
                }
              ]
            }
          },
          "ids": {
            "type": "array",
            "description": "The requested query ids",
            "items": {
              "type": "string",
              "format": "uuid"
            }
          }
        },
        "description": "Describes a request to get a list of queries"
      },
      "QueryHierarchyItem": {
        "properties": {
          "children": {
            "type": "array",
            "description": "The child query items inside a query folder.",
            "items": {
              "$ref": "#/components/schemas/QueryHierarchyItem"
            }
          },
          "clauses": {
            "$ref": "#/components/schemas/WorkItemQueryClause"
          },
          "columns": {
            "type": "array",
            "description": "The columns of the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemFieldReference"
            }
          },
          "createdBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "createdDate": {
            "type": "string",
            "description": "When the query item was created.",
            "format": "date-time"
          },
          "filterOptions": {
            "type": "string",
            "description": "The link query mode.",
            "enum": [
              "workItems",
              "linksOneHopMustContain",
              "linksOneHopMayContain",
              "linksOneHopDoesNotContain",
              "linksRecursiveMustContain",
              "linksRecursiveMayContain",
              "linksRecursiveDoesNotContain"
            ],
            "x-ms-enum": {
              "name": "LinkQueryMode",
              "values": [
                {
                  "value": "workItems",
                  "description": "Returns flat list of work items."
                },
                {
                  "value": "linksOneHopMustContain",
                  "description": "Returns work items where the source, target, and link criteria are all satisfied."
                },
                {
                  "value": "linksOneHopMayContain",
                  "description": "Returns work items that satisfy the source and link criteria, even if no linked work item satisfies the target criteria."
                },
                {
                  "value": "linksOneHopDoesNotContain",
                  "description": "Returns work items that satisfy the source, only if no linked work item satisfies the link and target criteria."
                },
                {
                  "value": "linksRecursiveMustContain",
                  "description": ""
                },
                {
                  "value": "linksRecursiveMayContain",
                  "description": "Returns work items a hierarchy of work items that by default satisfy the source"
                },
                {
                  "value": "linksRecursiveDoesNotContain",
                  "description": ""
                }
              ]
            }
          },
          "hasChildren": {
            "type": "boolean",
            "description": "If this is a query folder, indicates if it contains any children."
          },
          "id": {
            "type": "string",
            "description": "The id of the query item.",
            "format": "uuid"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates if this query item is deleted. Setting this to false on a deleted query item will undelete it. Undeleting a query or folder will not bring back the permission changes that were previously applied to it."
          },
          "isFolder": {
            "type": "boolean",
            "description": "Indicates if this is a query folder or a query."
          },
          "isInvalidSyntax": {
            "type": "boolean",
            "description": "Indicates if the WIQL of this query is invalid. This could be due to invalid syntax or a no longer valid area/iteration path."
          },
          "isPublic": {
            "type": "boolean",
            "description": "Indicates if this query item is public or private."
          },
          "lastExecutedBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "lastExecutedDate": {
            "type": "string",
            "description": "When the query was last run.",
            "format": "date-time"
          },
          "lastModifiedBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "lastModifiedDate": {
            "type": "string",
            "description": "When the query item was last modified.",
            "format": "date-time"
          },
          "linkClauses": {
            "$ref": "#/components/schemas/WorkItemQueryClause"
          },
          "name": {
            "type": "string",
            "description": "The name of the query item."
          },
          "path": {
            "type": "string",
            "description": "The path of the query item."
          },
          "queryRecursionOption": {
            "type": "string",
            "description": "The recursion option for use in a tree query.",
            "enum": [
              "parentFirst",
              "childFirst"
            ],
            "x-ms-enum": {
              "name": "QueryRecursionOption",
              "values": [
                {
                  "value": "parentFirst",
                  "description": "Returns work items that satisfy the source, even if no linked work item satisfies the target and link criteria."
                },
                {
                  "value": "childFirst",
                  "description": "Returns work items that satisfy the target criteria, even if no work item satisfies the source and link criteria."
                }
              ]
            }
          },
          "queryType": {
            "type": "string",
            "description": "The type of query.",
            "enum": [
              "flat",
              "tree",
              "oneHop"
            ],
            "x-ms-enum": {
              "name": "QueryType",
              "values": [
                {
                  "value": "flat",
                  "description": "Gets a flat list of work items."
                },
                {
                  "value": "tree",
                  "description": "Gets a tree of work items showing their link hierarchy."
                },
                {
                  "value": "oneHop",
                  "description": "Gets a list of work items and their direct links."
                }
              ]
            }
          },
          "sortColumns": {
            "type": "array",
            "description": "The sort columns of the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemQuerySortColumn"
            }
          },
          "sourceClauses": {
            "$ref": "#/components/schemas/WorkItemQueryClause"
          },
          "targetClauses": {
            "$ref": "#/components/schemas/WorkItemQueryClause"
          },
          "wiql": {
            "type": "string",
            "description": "The WIQL text of the query"
          }
        },
        "description": "Represents an item in the work item query hierarchy. This can be either a query or a folder.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "QueryHierarchyItemsResult": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The count of items.",
            "format": "int32"
          },
          "hasMore": {
            "type": "boolean",
            "description": "Indicates if the max return limit was hit but there are still more items"
          },
          "value": {
            "type": "array",
            "description": "The list of items",
            "items": {
              "$ref": "#/components/schemas/QueryHierarchyItem"
            }
          }
        },
        "description": ""
      },
      "ReferenceLinks": {
        "type": "object",
        "properties": {
          "links": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "The readonly view of the links.  Because Reference links are readonly, we only want to expose them as read only."
          }
        },
        "description": "The class to represent a collection of REST reference links."
      },
      "ReportingWorkItemLinksBatch": {
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamedBatch"
          }
        ]
      },
      "ReportingWorkItemRevisionsBatch": {
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/StreamedBatch"
          }
        ]
      },
      "ReportingWorkItemRevisionsFilter": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "description": "A list of fields to return in work item revisions. Omit this parameter to get all reportable fields.",
            "items": {
              "type": "string"
            }
          },
          "includeDeleted": {
            "type": "boolean",
            "description": "Include deleted work item in the result."
          },
          "includeIdentityRef": {
            "type": "boolean",
            "description": "Return an identity reference instead of a string value for identity fields."
          },
          "includeLatestOnly": {
            "type": "boolean",
            "description": "Include only the latest version of a work item, skipping over all previous revisions of the work item."
          },
          "includeTagRef": {
            "type": "boolean",
            "description": "Include tag reference instead of string value for System.Tags field"
          },
          "types": {
            "type": "array",
            "description": "A list of types to filter the results to specific work item types. Omit this parameter to get work item revisions of all work item types.",
            "items": {
              "type": "string"
            }
          }
        },
        "description": "The class represents the reporting work item revision filer."
      },
      "SendMailBody": {
        "type": "object",
        "properties": {
          "fields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "ids": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "message": {
            "$ref": "#/components/schemas/MailMessage"
          },
          "persistenceId": {
            "type": "string",
            "format": "uuid"
          },
          "projectId": {
            "type": "string"
          },
          "sortFields": {
            "type": "array",
            "items": {
              "type": "string"
            }
          },
          "tempQueryId": {
            "type": "string"
          },
          "wiql": {
            "type": "string"
          }
        },
        "description": ""
      },
      "StreamedBatch": {
        "type": "object",
        "properties": {
          "continuationToken": {
            "type": "string",
            "description": "ContinuationToken acts as a waterMark. Used while querying large results."
          },
          "isLastBatch": {
            "type": "boolean",
            "description": "Returns 'true' if it's last batch, 'false' otherwise."
          },
          "nextLink": {
            "type": "string",
            "description": "The next link for the work item."
          },
          "values": {
            "type": "array",
            "description": "Values such as rel, sourceId, TargetId, ChangedDate, isActive.",
            "items": {
              "type": "string",
              "format": "T"
            }
          }
        },
        "description": "The class describes reporting work item revision batch."
      },
      "TeamContext": {
        "type": "object",
        "properties": {
          "project": {
            "type": "string",
            "description": "The team project Id or name.  Ignored if ProjectId is set."
          },
          "projectId": {
            "type": "string",
            "description": "The Team Project ID.  Required if Project is not set.",
            "format": "uuid"
          },
          "team": {
            "type": "string",
            "description": "The Team Id or name.  Ignored if TeamId is set."
          },
          "teamId": {
            "type": "string",
            "description": "The Team Id",
            "format": "uuid"
          }
        },
        "description": "The Team Context for an operation."
      },
      "TemporaryQueryRequestModel": {
        "properties": {
          "wiql": {
            "type": "string",
            "description": "The WIQL text of the temporary query"
          }
        },
        "description": "Describes a request to create a temporary query",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "TemporaryQueryResponseModel": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The id of the temporary query item.",
            "format": "uuid"
          }
        },
        "description": "The result of a temporary query creation."
      },
      "UpdateWorkItemField": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether the user wants to restore the field."
          }
        },
        "description": "Describes an update request for a work item field."
      },
      "VssJsonCollectionWrapper": {
        "properties": {
          "value": {
            "type": "string",
            "description": "The serialized item.",
            "format": "T"
          }
        },
        "description": "This class is used to serialize collections as a single JSON object on the wire.",
        "allOf": [
          {
            "$ref": "#/components/schemas/VssJsonCollectionWrapperBase"
          }
        ]
      },
      "VssJsonCollectionWrapperBase": {
        "type": "object",
        "properties": {
          "count": {
            "type": "integer",
            "description": "The number of serialized items.",
            "format": "int32"
          }
        },
        "description": ""
      },
      "Wiql": {
        "type": "object",
        "properties": {
          "query": {
            "type": "string",
            "description": "The text of the WIQL query"
          }
        },
        "description": "A WIQL query"
      },
      "WorkArtifactLink": {
        "type": "object",
        "properties": {
          "artifactType": {
            "type": "string",
            "description": "Target artifact type."
          },
          "linkType": {
            "type": "string",
            "description": "Outbound link type."
          },
          "toolType": {
            "type": "string",
            "description": "Target tool type."
          }
        },
        "description": "A work artifact link describes an outbound artifact link type."
      },
      "WorkItem": {
        "properties": {
          "commentVersionRef": {
            "$ref": "#/components/schemas/WorkItemCommentVersionRef"
          },
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Map of field and values for the work item."
          },
          "id": {
            "type": "integer",
            "description": "The work item ID.",
            "format": "int32"
          },
          "relations": {
            "type": "array",
            "description": "Relations of the work item.",
            "items": {
              "$ref": "#/components/schemas/WorkItemRelation"
            }
          },
          "rev": {
            "type": "integer",
            "description": "Revision number of the work item.",
            "format": "int32"
          }
        },
        "description": "Describes a work item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemBatchGetRequest": {
        "type": "object",
        "properties": {
          "$expand": {
            "type": "string",
            "description": "The expand parameters for work item attributes. Possible options are { None, Relations, Fields, Links, All }",
            "enum": [
              "none",
              "relations",
              "fields",
              "links",
              "all"
            ],
            "x-ms-enum": {
              "name": "WorkItemExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Default behavior."
                },
                {
                  "value": "relations",
                  "description": "Relations work item expand."
                },
                {
                  "value": "fields",
                  "description": "Fields work item expand."
                },
                {
                  "value": "links",
                  "description": "Links work item expand."
                },
                {
                  "value": "all",
                  "description": "Expands all."
                }
              ]
            }
          },
          "asOf": {
            "type": "string",
            "description": "AsOf UTC date time string",
            "format": "date-time"
          },
          "errorPolicy": {
            "type": "string",
            "description": "The flag to control error policy in a bulk get work items request. Possible options are {Fail, Omit}.",
            "enum": [
              "fail",
              "omit"
            ],
            "x-ms-enum": {
              "name": "WorkItemErrorPolicy",
              "values": [
                {
                  "value": "fail",
                  "description": "Fail work error policy."
                },
                {
                  "value": "omit",
                  "description": "Omit work error policy."
                }
              ]
            }
          },
          "fields": {
            "type": "array",
            "description": "The requested fields",
            "items": {
              "type": "string"
            }
          },
          "ids": {
            "type": "array",
            "description": "The requested work item ids",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        },
        "description": "Describes a request to get a set of work items"
      },
      "WorkItemClassificationNode": {
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "Dictionary that has node attributes like start/finish date for iteration nodes."
          },
          "children": {
            "type": "array",
            "description": "List of child nodes fetched.",
            "items": {
              "$ref": "#/components/schemas/WorkItemClassificationNode"
            }
          },
          "hasChildren": {
            "type": "boolean",
            "description": "Flag that indicates if the classification node has any child nodes."
          },
          "id": {
            "type": "integer",
            "description": "Integer ID of the classification node.",
            "format": "int32"
          },
          "identifier": {
            "type": "string",
            "description": "GUID ID of the classification node.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "Name of the classification node."
          },
          "path": {
            "type": "string",
            "description": "Path of the classification node."
          },
          "structureType": {
            "type": "string",
            "description": "Node structure type.",
            "enum": [
              "area",
              "iteration"
            ],
            "x-ms-enum": {
              "name": "TreeNodeStructureType",
              "values": [
                {
                  "value": "area",
                  "description": "Area type."
                },
                {
                  "value": "iteration",
                  "description": "Iteration type."
                }
              ]
            }
          }
        },
        "description": "Defines a classification node for work item tracking.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemComment": {
        "properties": {
          "format": {
            "type": "string",
            "description": "Represents the possible types for the comment format.",
            "enum": [
              "markdown",
              "html"
            ],
            "x-ms-enum": {
              "name": "CommentFormat",
              "values": [
                {
                  "value": "markdown",
                  "description": ""
                },
                {
                  "value": "html",
                  "description": ""
                }
              ]
            }
          },
          "renderedText": {
            "type": "string",
            "description": "The text of the comment in HTML format."
          },
          "revisedBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "revisedDate": {
            "type": "string",
            "description": "The date of comment.",
            "format": "date-time"
          },
          "revision": {
            "type": "integer",
            "description": "The work item revision number.",
            "format": "int32"
          },
          "text": {
            "type": "string",
            "description": "The text of the comment."
          }
        },
        "description": "Comment on Work Item",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemComments": {
        "properties": {
          "comments": {
            "type": "array",
            "description": "Comments collection.",
            "items": {
              "$ref": "#/components/schemas/WorkItemComment"
            }
          },
          "count": {
            "type": "integer",
            "description": "The count of comments.",
            "format": "int32"
          },
          "fromRevisionCount": {
            "type": "integer",
            "description": "Count of comments from the revision.",
            "format": "int32"
          },
          "totalCount": {
            "type": "integer",
            "description": "Total count of comments.",
            "format": "int32"
          }
        },
        "description": "Collection of comments.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemCommentVersionRef": {
        "properties": {
          "commentId": {
            "type": "integer",
            "description": "The id assigned to the comment.",
            "format": "int32"
          },
          "createdInRevision": {
            "type": "integer",
            "description": "[Internal] The work item revision where this comment was originally added.",
            "format": "int32"
          },
          "isDeleted": {
            "type": "boolean",
            "description": "[Internal] Specifies whether comment was deleted."
          },
          "text": {
            "type": "string",
            "description": "[Internal] The text of the comment."
          },
          "version": {
            "type": "integer",
            "description": "The version number.",
            "format": "int32"
          }
        },
        "description": "Represents the reference to a specific version of a comment on a Work Item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResourceReference"
          }
        ]
      },
      "WorkItemDelete": {
        "properties": {
          "resource": {
            "$ref": "#/components/schemas/WorkItem"
          }
        },
        "description": "Full deleted work item object. Includes the work item itself.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemDeleteReference"
          }
        ]
      },
      "WorkItemDeleteBatch": {
        "type": "object",
        "properties": {
          "results": {
            "type": "array",
            "description": "List of results for each work item",
            "items": {
              "$ref": "#/components/schemas/WorkItemDelete"
            }
          }
        },
        "description": "Describes response to delete a set of work items."
      },
      "WorkItemDeleteBatchRequest": {
        "type": "object",
        "properties": {
          "destroy": {
            "type": "boolean",
            "description": "Optional parameter, if set to true, the work item is deleted permanently. Please note: the destroy action is PERMANENT and cannot be undone."
          },
          "ids": {
            "type": "array",
            "description": "The requested work item ids",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "skipNotifications": {
            "type": "boolean",
            "description": "Optional parameter, if set to true, notifications will be disabled."
          }
        },
        "description": "Describes a request to delete a set of work items"
      },
      "WorkItemDeleteReference": {
        "type": "object",
        "properties": {
          "code": {
            "type": "integer",
            "description": "The HTTP status code for work item operation in a batch request.",
            "format": "int32"
          },
          "deletedBy": {
            "type": "string",
            "description": "The user who deleted the work item type."
          },
          "deletedDate": {
            "type": "string",
            "description": "The work item deletion date."
          },
          "id": {
            "type": "integer",
            "description": "Work item ID.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "The exception message for work item operation in a batch request."
          },
          "name": {
            "type": "string",
            "description": "Name or title of the work item."
          },
          "project": {
            "type": "string",
            "description": "Parent project of the deleted work item."
          },
          "type": {
            "type": "string",
            "description": "Type of work item."
          },
          "url": {
            "type": "string",
            "description": "REST API URL of the resource"
          }
        },
        "description": "Reference to a deleted work item."
      },
      "WorkItemDeleteShallowReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Work item ID.",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "REST API URL of the resource"
          }
        },
        "description": "Shallow Reference to a deleted work item."
      },
      "WorkItemDeleteUpdate": {
        "type": "object",
        "properties": {
          "isDeleted": {
            "type": "boolean",
            "description": "Sets a value indicating whether this work item is deleted."
          }
        },
        "description": "Describes an update request for a deleted work item."
      },
      "WorkItemField": {
        "properties": {
          "canSortBy": {
            "type": "boolean",
            "description": "Indicates whether the field is sortable in server queries."
          },
          "description": {
            "type": "string",
            "description": "The description of the field."
          },
          "isDeleted": {
            "type": "boolean",
            "description": "Indicates whether this field is deleted."
          },
          "isIdentity": {
            "type": "boolean",
            "description": "Indicates whether this field is an identity field."
          },
          "isPicklist": {
            "type": "boolean",
            "description": "Indicates whether this instance is picklist."
          },
          "isPicklistSuggested": {
            "type": "boolean",
            "description": "Indicates whether this instance is a suggested picklist ."
          },
          "isQueryable": {
            "type": "boolean",
            "description": "Indicates whether the field can be queried in the server."
          },
          "name": {
            "type": "string",
            "description": "The name of the field."
          },
          "picklistId": {
            "type": "string",
            "description": "If this field is picklist, the identifier of the picklist associated, otherwise null",
            "format": "uuid"
          },
          "readOnly": {
            "type": "boolean",
            "description": "Indicates whether the field is [read only]."
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name of the field."
          },
          "supportedOperations": {
            "type": "array",
            "description": "The supported operations on this field.",
            "items": {
              "$ref": "#/components/schemas/WorkItemFieldOperation"
            }
          },
          "type": {
            "type": "string",
            "description": "The type of the field.",
            "enum": [
              "string",
              "integer",
              "dateTime",
              "plainText",
              "html",
              "treePath",
              "history",
              "double",
              "guid",
              "boolean",
              "identity",
              "picklistString",
              "picklistInteger",
              "picklistDouble"
            ],
            "x-ms-enum": {
              "name": "FieldType",
              "values": [
                {
                  "value": "string",
                  "description": "String field type."
                },
                {
                  "value": "integer",
                  "description": "Integer field type."
                },
                {
                  "value": "dateTime",
                  "description": "Datetime field type."
                },
                {
                  "value": "plainText",
                  "description": "Plain text field type."
                },
                {
                  "value": "html",
                  "description": "HTML (Multiline) field type."
                },
                {
                  "value": "treePath",
                  "description": "Treepath field type."
                },
                {
                  "value": "history",
                  "description": "History field type."
                },
                {
                  "value": "double",
                  "description": "Double field type."
                },
                {
                  "value": "guid",
                  "description": "Guid field type."
                },
                {
                  "value": "boolean",
                  "description": "Boolean field type."
                },
                {
                  "value": "identity",
                  "description": "Identity field type."
                },
                {
                  "value": "picklistString",
                  "description": "String picklist field type. When creating a string picklist field from REST API, use \"String\" FieldType."
                },
                {
                  "value": "picklistInteger",
                  "description": "Integer picklist field type. When creating a integer picklist field from REST API, use \"Integer\" FieldType."
                },
                {
                  "value": "picklistDouble",
                  "description": "Double picklist field type. When creating a double picklist field from REST API, use \"Double\" FieldType."
                }
              ]
            }
          },
          "usage": {
            "type": "string",
            "description": "The usage of the field.",
            "enum": [
              "none",
              "workItem",
              "workItemLink",
              "tree",
              "workItemTypeExtension"
            ],
            "x-ms-enum": {
              "name": "FieldUsage",
              "values": [
                {
                  "value": "none",
                  "description": "Empty usage."
                },
                {
                  "value": "workItem",
                  "description": "Work item field usage."
                },
                {
                  "value": "workItemLink",
                  "description": "Work item link field usage."
                },
                {
                  "value": "tree",
                  "description": "Treenode field usage."
                },
                {
                  "value": "workItemTypeExtension",
                  "description": "Work Item Type Extension usage."
                }
              ]
            }
          }
        },
        "description": "Describes a field on a work item and it's properties specific to that work item type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemField2": {
        "properties": {
          "isLocked": {
            "type": "boolean",
            "description": "Indicates whether this field is marked as locked for editing."
          }
        },
        "description": "Describes a field on a work item and it's properties specific to that work item type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemField"
          }
        ]
      },
      "WorkItemFieldAllowedValues": {
        "type": "object",
        "properties": {
          "allowedValues": {
            "type": "array",
            "description": "The list of field allowed values.",
            "items": {
              "type": "string"
            }
          },
          "fieldName": {
            "type": "string",
            "description": "Name of the field."
          }
        },
        "description": "Describes the list of allowed values of the field."
      },
      "WorkItemFieldOperation": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "Friendly name of the operation."
          },
          "referenceName": {
            "type": "string",
            "description": "Reference name of the operation."
          }
        },
        "description": "Describes a work item field operation."
      },
      "WorkItemFieldReference": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "description": "The friendly name of the field."
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name of the field."
          },
          "url": {
            "type": "string",
            "description": "The REST URL of the resource."
          }
        },
        "description": "Reference to a field in a work item"
      },
      "WorkItemFieldUpdate": {
        "type": "object",
        "properties": {
          "newValue": {
            "type": "object",
            "properties": {},
            "description": "The new value of the field."
          },
          "oldValue": {
            "type": "object",
            "properties": {},
            "description": "The old value of the field."
          }
        },
        "description": "Describes an update to a work item field."
      },
      "WorkItemHistory": {
        "properties": {
          "rev": {
            "type": "integer",
            "format": "int32"
          },
          "revisedBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "revisedDate": {
            "type": "string",
            "format": "date-time"
          },
          "value": {
            "type": "string"
          }
        },
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemIcon": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "description": "The identifier of the icon."
          },
          "url": {
            "type": "string",
            "description": "The REST URL of the resource."
          }
        },
        "description": "Reference to a work item icon."
      },
      "WorkItemLink": {
        "type": "object",
        "properties": {
          "rel": {
            "type": "string",
            "description": "The type of link."
          },
          "source": {
            "$ref": "#/components/schemas/WorkItemReference"
          },
          "target": {
            "$ref": "#/components/schemas/WorkItemReference"
          }
        },
        "description": "A link between two work items."
      },
      "WorkItemNextStateOnTransition": {
        "type": "object",
        "properties": {
          "errorCode": {
            "type": "string",
            "description": "Error code if there is no next state transition possible."
          },
          "id": {
            "type": "integer",
            "description": "Work item ID.",
            "format": "int32"
          },
          "message": {
            "type": "string",
            "description": "Error message if there is no next state transition possible."
          },
          "stateOnTransition": {
            "type": "string",
            "description": "Name of the next state on transition."
          }
        },
        "description": "Describes the next state for a work item."
      },
      "WorkItemQueryClause": {
        "type": "object",
        "properties": {
          "clauses": {
            "type": "array",
            "description": "Child clauses if the current clause is a logical operator",
            "items": {
              "$ref": "#/components/schemas/WorkItemQueryClause"
            }
          },
          "field": {
            "$ref": "#/components/schemas/WorkItemFieldReference"
          },
          "fieldValue": {
            "$ref": "#/components/schemas/WorkItemFieldReference"
          },
          "isFieldValue": {
            "type": "boolean",
            "description": "Determines if this is a field to field comparison"
          },
          "logicalOperator": {
            "type": "string",
            "description": "Logical operator separating the condition clause",
            "enum": [
              "none",
              "and",
              "or"
            ],
            "x-ms-enum": {
              "name": "LogicalOperation",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "and",
                  "description": ""
                },
                {
                  "value": "or",
                  "description": ""
                }
              ]
            }
          },
          "operator": {
            "$ref": "#/components/schemas/WorkItemFieldOperation"
          },
          "value": {
            "type": "string",
            "description": "Right side of the condition when a field to value comparison"
          }
        },
        "description": "Represents a clause in a work item query. This shows the structure of a work item query."
      },
      "WorkItemQueryResult": {
        "type": "object",
        "properties": {
          "asOf": {
            "type": "string",
            "description": "The date the query was run in the context of.",
            "format": "date-time"
          },
          "columns": {
            "type": "array",
            "description": "The columns of the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemFieldReference"
            }
          },
          "queryResultType": {
            "type": "string",
            "description": "The result type",
            "enum": [
              "workItem",
              "workItemLink"
            ],
            "x-ms-enum": {
              "name": "QueryResultType",
              "values": [
                {
                  "value": "workItem",
                  "description": "A list of work items (for flat queries)."
                },
                {
                  "value": "workItemLink",
                  "description": "A list of work item links (for OneHop and Tree queries)."
                }
              ]
            }
          },
          "queryType": {
            "type": "string",
            "description": "The type of the query",
            "enum": [
              "flat",
              "tree",
              "oneHop"
            ],
            "x-ms-enum": {
              "name": "QueryType",
              "values": [
                {
                  "value": "flat",
                  "description": "Gets a flat list of work items."
                },
                {
                  "value": "tree",
                  "description": "Gets a tree of work items showing their link hierarchy."
                },
                {
                  "value": "oneHop",
                  "description": "Gets a list of work items and their direct links."
                }
              ]
            }
          },
          "sortColumns": {
            "type": "array",
            "description": "The sort columns of the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemQuerySortColumn"
            }
          },
          "workItemRelations": {
            "type": "array",
            "description": "The work item links returned by the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemLink"
            }
          },
          "workItems": {
            "type": "array",
            "description": "The work items returned by the query.",
            "items": {
              "$ref": "#/components/schemas/WorkItemReference"
            }
          }
        },
        "description": "The result of a work item query."
      },
      "WorkItemQuerySortColumn": {
        "type": "object",
        "properties": {
          "descending": {
            "type": "boolean",
            "description": "The direction to sort by."
          },
          "field": {
            "$ref": "#/components/schemas/WorkItemFieldReference"
          }
        },
        "description": "A sort column."
      },
      "WorkItemReference": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "Work item ID.",
            "format": "int32"
          },
          "url": {
            "type": "string",
            "description": "REST API URL of the resource"
          }
        },
        "description": "Contains reference to a work item."
      },
      "WorkItemRelation": {
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/Link"
          }
        ]
      },
      "WorkItemRelationType": {
        "properties": {
          "attributes": {
            "type": "object",
            "additionalProperties": {
              "type": "object",
              "properties": {}
            },
            "description": "The collection of relation type attributes."
          }
        },
        "description": "Represents the work item type relation type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingReference"
          }
        ]
      },
      "WorkItemRelationUpdates": {
        "type": "object",
        "properties": {
          "added": {
            "type": "array",
            "description": "List of newly added relations.",
            "items": {
              "$ref": "#/components/schemas/WorkItemRelation"
            }
          },
          "removed": {
            "type": "array",
            "description": "List of removed relations.",
            "items": {
              "$ref": "#/components/schemas/WorkItemRelation"
            }
          },
          "updated": {
            "type": "array",
            "description": "List of updated relations.",
            "items": {
              "$ref": "#/components/schemas/WorkItemRelation"
            }
          }
        },
        "description": "Describes updates to a work item's relations."
      },
      "WorkItemStateColor": {
        "type": "object",
        "properties": {
          "category": {
            "type": "string",
            "description": "Category of state"
          },
          "color": {
            "type": "string",
            "description": "Color value"
          },
          "name": {
            "type": "string",
            "description": "Work item type state name"
          }
        },
        "description": "Work item type state name, color and state category"
      },
      "WorkItemStateTransition": {
        "type": "object",
        "properties": {
          "actions": {
            "type": "array",
            "description": "Gets a list of actions needed to transition to that state.",
            "items": {
              "type": "string"
            }
          },
          "to": {
            "type": "string",
            "description": "Name of the next state."
          }
        },
        "description": "Describes a state transition in a work item."
      },
      "WorkItemTagDefinition": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "lastUpdated": {
            "type": "string",
            "format": "date-time"
          },
          "name": {
            "type": "string"
          },
          "url": {
            "type": "string"
          }
        },
        "description": ""
      },
      "WorkItemTemplate": {
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "description": "Mapping of field and its templated value."
          }
        },
        "description": "Describes a work item template.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTemplateReference"
          }
        ]
      },
      "WorkItemTemplateReference": {
        "properties": {
          "description": {
            "type": "string",
            "description": "The description of the work item template."
          },
          "id": {
            "type": "string",
            "description": "The identifier of the work item template.",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "description": "The name of the work item template."
          },
          "workItemTypeName": {
            "type": "string",
            "description": "The name of the work item type."
          }
        },
        "description": "Describes a shallow reference to a work item template.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemTrackingReference": {
        "properties": {
          "name": {
            "type": "string",
            "description": "The name."
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name."
          }
        },
        "description": "",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemTrackingResource": {
        "properties": {
          "_links": {
            "$ref": "#/components/schemas/ReferenceLinks"
          }
        },
        "description": "Base class for WIT REST resources.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResourceReference"
          }
        ]
      },
      "WorkItemTrackingResourceReference": {
        "type": "object",
        "properties": {
          "url": {
            "type": "string",
            "description": "REST URL for the resource."
          }
        },
        "description": "Base class for work item tracking resource references."
      },
      "WorkItemType": {
        "properties": {
          "color": {
            "type": "string",
            "description": "The color."
          },
          "description": {
            "type": "string",
            "description": "The description of the work item type."
          },
          "fieldInstances": {
            "type": "array",
            "description": "The fields that exist on the work item type.",
            "items": {
              "$ref": "#/components/schemas/WorkItemTypeFieldInstance"
            }
          },
          "fields": {
            "type": "array",
            "description": "The fields that exist on the work item type.",
            "items": {
              "$ref": "#/components/schemas/WorkItemTypeFieldInstance"
            }
          },
          "icon": {
            "$ref": "#/components/schemas/WorkItemIcon"
          },
          "isDisabled": {
            "type": "boolean",
            "description": "True if work item type is disabled"
          },
          "name": {
            "type": "string",
            "description": "Gets the name of the work item type."
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name of the work item type."
          },
          "states": {
            "type": "array",
            "description": "Gets state information for the work item type.",
            "items": {
              "$ref": "#/components/schemas/WorkItemStateColor"
            }
          },
          "transitions": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/WorkItemStateTransition"
              }
            },
            "description": "Gets the various state transition mappings in the work item type."
          },
          "xmlForm": {
            "type": "string",
            "description": "The XML form."
          }
        },
        "description": "Describes a work item type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemTypeCategory": {
        "properties": {
          "defaultWorkItemType": {
            "$ref": "#/components/schemas/WorkItemTypeReference"
          },
          "name": {
            "type": "string",
            "description": "The name of the category."
          },
          "referenceName": {
            "type": "string",
            "description": "The reference name of the category."
          },
          "workItemTypes": {
            "type": "array",
            "description": "The work item types that belong to the category.",
            "items": {
              "$ref": "#/components/schemas/WorkItemTypeReference"
            }
          }
        },
        "description": "Describes a work item type category.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      },
      "WorkItemTypeColor": {
        "type": "object",
        "properties": {
          "primaryColor": {
            "type": "string",
            "description": "Gets or sets the color of the primary."
          },
          "secondaryColor": {
            "type": "string",
            "description": "Gets or sets the color of the secondary."
          },
          "workItemTypeName": {
            "type": "string",
            "description": "The name of the work item type."
          }
        },
        "description": "Describes a work item type's colors."
      },
      "WorkItemTypeColorAndIcon": {
        "type": "object",
        "properties": {
          "color": {
            "type": "string",
            "description": "The color of the work item type in hex format."
          },
          "icon": {
            "type": "string",
            "description": "The work item type icon."
          },
          "isDisabled": {
            "type": "boolean",
            "description": "Indicates if the work item is disabled in the process."
          },
          "workItemTypeName": {
            "type": "string",
            "description": "The name of the work item type."
          }
        },
        "description": "Describes work item type name, its icon and color."
      },
      "WorkItemTypeFieldInstance": {
        "properties": {
          "allowedValues": {
            "type": "array",
            "description": "The list of field allowed values.",
            "items": {
              "type": "string"
            }
          },
          "defaultValue": {
            "type": "string",
            "description": "Represents the default value of the field."
          }
        },
        "description": "Field instance of a work item type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTypeFieldInstanceBase"
          }
        ]
      },
      "WorkItemTypeFieldInstanceBase": {
        "properties": {
          "alwaysRequired": {
            "type": "boolean",
            "description": "Indicates whether field value is always required."
          },
          "dependentFields": {
            "type": "array",
            "description": "The list of dependent fields.",
            "items": {
              "$ref": "#/components/schemas/WorkItemFieldReference"
            }
          },
          "helpText": {
            "type": "string",
            "description": "Gets the help text for the field."
          }
        },
        "description": "Base field instance for workItemType fields.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemFieldReference"
          }
        ]
      },
      "WorkItemTypeFieldWithReferences": {
        "properties": {
          "allowedValues": {
            "type": "array",
            "description": "The list of field allowed values.",
            "items": {
              "type": "object",
              "properties": {}
            }
          },
          "defaultValue": {
            "type": "object",
            "properties": {},
            "description": "Represents the default value of the field."
          }
        },
        "description": "Field Instance of a workItemype with detailed references.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTypeFieldInstanceBase"
          }
        ]
      },
      "WorkItemTypeReference": {
        "properties": {
          "name": {
            "type": "string",
            "description": "Name of the work item type."
          }
        },
        "description": "Reference to a work item type.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResourceReference"
          }
        ]
      },
      "WorkItemTypeStateColors": {
        "type": "object",
        "properties": {
          "stateColors": {
            "type": "array",
            "description": "Work item type state colors",
            "items": {
              "$ref": "#/components/schemas/WorkItemStateColor"
            }
          },
          "workItemTypeName": {
            "type": "string",
            "description": "Work item type name"
          }
        },
        "description": "State colors for a work item type"
      },
      "WorkItemTypeTemplate": {
        "type": "object",
        "properties": {
          "template": {
            "type": "string",
            "description": "XML template in string format."
          }
        },
        "description": "Describes a work item type template."
      },
      "WorkItemTypeTemplateUpdateModel": {
        "type": "object",
        "properties": {
          "actionType": {
            "type": "string",
            "description": "Describes the type of the action for the update request.",
            "enum": [
              "import",
              "validate"
            ],
            "x-ms-enum": {
              "name": "ProvisioningActionType",
              "values": [
                {
                  "value": "import",
                  "description": ""
                },
                {
                  "value": "validate",
                  "description": ""
                }
              ]
            }
          },
          "methodology": {
            "type": "string",
            "description": "Methodology to which the template belongs, eg. Agile, Scrum, CMMI."
          },
          "template": {
            "type": "string",
            "description": "String representation of the work item type template."
          },
          "templateType": {
            "type": "string",
            "description": "The type of the template described in the request body.",
            "enum": [
              "workItemType",
              "globalWorkflow"
            ],
            "x-ms-enum": {
              "name": "TemplateType",
              "values": [
                {
                  "value": "workItemType",
                  "description": ""
                },
                {
                  "value": "globalWorkflow",
                  "description": ""
                }
              ]
            }
          }
        },
        "description": "Describes a update work item type template request body."
      },
      "WorkItemUpdate": {
        "properties": {
          "fields": {
            "type": "object",
            "additionalProperties": {
              "$ref": "#/components/schemas/WorkItemFieldUpdate"
            },
            "description": "List of updates to fields."
          },
          "id": {
            "type": "integer",
            "description": "ID of update.",
            "format": "int32"
          },
          "relations": {
            "$ref": "#/components/schemas/WorkItemRelationUpdates"
          },
          "rev": {
            "type": "integer",
            "description": "The revision number of work item update.",
            "format": "int32"
          },
          "revisedBy": {
            "$ref": "#/components/schemas/IdentityReference"
          },
          "revisedDate": {
            "type": "string",
            "description": "The work item updates revision date.",
            "format": "date-time"
          },
          "workItemId": {
            "type": "integer",
            "description": "The work item ID.",
            "format": "int32"
          }
        },
        "description": "Describes an update to a work item.",
        "allOf": [
          {
            "$ref": "#/components/schemas/WorkItemTrackingResource"
          }
        ]
      }
    },
    "parameters": {
      "api-Version-preview.1": {
        "name": "api-version",
        "in": "query",
        "description": "Version of the API to use.  This should be set to '7.2-preview.1' to use this version of the api.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-Version-preview.2": {
        "name": "api-version",
        "in": "query",
        "description": "Version of the API to use.  This should be set to '7.2-preview.2' to use this version of the api.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-Version-preview.3": {
        "name": "api-version",
        "in": "query",
        "description": "Version of the API to use.  This should be set to '7.2-preview.3' to use this version of the api.",
        "required": true,
        "schema": {
          "type": "string"
        }
      },
      "api-Version-preview.4": {
        "name": "api-version",
        "in": "query",
        "description": "Version of the API to use.  This should be set to '7.2-preview.4' to use this version of the api.",
        "required": true,
        "schema": {
          "type": "string"
        }
      }
    },
    "securitySchemes": {
      "accessToken": {
        "type": "http",
        "description": "Personal access token. Use any value for the user name and the token as the password.",
        "scheme": "basic"
      },
      "oauth2": {
        "type": "oauth2",
        "flows": {
          "authorizationCode": {
            "authorizationUrl": "https://app.vssps.visualstudio.com/oauth2/authorize&response_type=Assertion",
            "tokenUrl": "https://app.vssps.visualstudio.com/oauth2/token?client_assertion_type=urn:ietf:params:oauth:client-assertion-type:jwt-bearer&grant_type=urn:ietf:params:oauth:grant-type:jwt-bearer",
            "scopes": {
              "vso.githubconnections_manage": "Grants the ability to read and manage github connections and github repositories data",
              "vso.githubconnections": "Grants the ability to read github connections and github repositories data",
              "vso.work": "Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.",
              "vso.work_write": "Grants the ability to read, create, and update work items and queries, update board metadata, read area and iterations paths other work item tracking related metadata, execute queries, and to receive notifications about work item events via service hooks.",
              "vso.work_full": "Grants full access to work items, queries, backlogs, plans, and work item tracking metadata. Also provides the ability to receive notifications about work item events via service hooks."
            }
          }
        }
      }
    }
  },
  "x-ms-vss-area": "WorkItemTracking",
  "x-ms-vss-resource-area-id": "5264459e-e5e0-4bd8-b118-0985e68a4ec5",
  "x-ms-paths": {
    "/{organization}/{project}/_apis/wit/classificationnodes?ids={ids}": {
      "get": {
        "tags": [
          "Classification Nodes"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "classificationNodes",
        "x-ms-vss-method": "GetClassificationNodes",
        "x-ms-preview": true,
        "description": "Gets root classification nodes or list of classification nodes for a given list of nodes ids, for a given project. In case ids parameter is supplied you will  get list of classification nodes for those ids. Otherwise you will get root classification nodes for this project.",
        "operationId": "Classification Nodes_Get Classification Nodes",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "Comma separated integer classification nodes ids. It's not required, if you want root nodes.",
            "required": true,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "query",
            "name": "$depth",
            "description": "Depth of children to fetch.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "errorPolicy",
            "description": "Flag to handle errors in getting some nodes. Possible options are Fail and Omit.",
            "required": false,
            "type": "string",
            "enum": [
              "fail",
              "omit"
            ],
            "x-ms-enum": {
              "name": "ClassificationNodesErrorPolicy",
              "values": [
                {
                  "value": "fail",
                  "description": ""
                },
                {
                  "value": "omit",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemClassificationNode"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get classification nodes from list of ids.": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_From_Ids.json"
          },
          "Get classification nodes with errorPolicy parameter.": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_From_Ids_ErrorPolicy.json"
          },
          "Get the root area tree": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas.json"
          },
          "Get the area tree with 2 levels of children": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_areas__depth-2.json"
          },
          "Get the root iteration tree": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations.json"
          },
          "Get the iteration tree with 2 levels of children": {
            "$ref": "./httpExamples/classificationNodes/GET__wit_classificationNodes_iterations__depth-2.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/queries?$filter={$filter}": {
      "get": {
        "tags": [
          "Queries"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "queries",
        "x-ms-vss-method": "SearchQueries",
        "x-ms-preview": true,
        "description": "Searches all queries the user has access to in the current project",
        "operationId": "Queries_Search Queries",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$filter",
            "description": "The text to filter the queries with.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "The number of queries to return (Default is 50 and maximum is 200).",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "wiql",
              "clauses",
              "all",
              "minimal"
            ],
            "x-ms-enum": {
              "name": "QueryExpand",
              "values": [
                {
                  "value": "none",
                  "description": "Expands Columns, Links and ChangeInfo"
                },
                {
                  "value": "wiql",
                  "description": "Expands Columns, Links,  ChangeInfo and WIQL text"
                },
                {
                  "value": "clauses",
                  "description": "Expands Columns, Links, ChangeInfo, WIQL text and clauses"
                },
                {
                  "value": "all",
                  "description": "Expands all properties"
                },
                {
                  "value": "minimal",
                  "description": "Displays minimal properties and the WIQL text"
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "$includeDeleted",
            "description": "Include deleted queries and folders",
            "required": false,
            "type": "boolean"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/QueryHierarchyItemsResult"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ]
      }
    },
    "/{organization}/{project}/_apis/wit/recyclebin?ids={ids}": {
      "get": {
        "tags": [
          "Recyclebin"
        ],
        "x-ms-docs-override-version": "7.2-preview.2",
        "x-ms-vss-resource": "recyclebin",
        "x-ms-vss-method": "GetDeletedWorkItems",
        "x-ms-preview": true,
        "description": "Gets the work items from the recycle bin, whose IDs have been specified in the parameters",
        "operationId": "Recyclebin_Get Deleted Work Items",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "query",
            "name": "ids",
            "description": "Comma separated list of IDs of the deleted work items to be returned",
            "required": true,
            "type": "string",
            "format": "array (int32)"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "x-ms-required": false,
            "type": "string"
          },
          {
            "$ref": "#/parameters/api-Version-preview.2"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/WorkItemDeleteReference"
              }
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "": {
            "$ref": "./httpExamples/recyclebin/GET__wit_recyclebin__ids_.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments?format={format}": {
      "post": {
        "tags": [
          "Comments"
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "AddWorkItemComment",
        "x-ms-preview": true,
        "description": "Add a comment on a work item.",
        "operationId": "Comments_Add Work Item Comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment create request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentCreate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workItemId",
            "description": "Id of a work item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "format",
            "description": "Format of a work item comment (Markdown or Html).",
            "required": true,
            "type": "string",
            "enum": [
              "markdown",
              "html"
            ],
            "x-ms-enum": {
              "name": "CommentFormat",
              "values": [
                {
                  "value": "markdown",
                  "description": ""
                },
                {
                  "value": "html",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.4"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Add a comment": {
            "$ref": "./httpExamples/comments/POST__wit_workitems__taskId__comments_create.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments?": {
      "get": {
        "tags": [
          "Comments"
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "GetComments",
        "x-ms-preview": true,
        "description": "Returns a list of work item comments, pageable.",
        "operationId": "Comments_Get Comments",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workItemId",
            "description": "Id of a work item to get comments for.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "$top",
            "description": "Max number of comments to return.",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "continuationToken",
            "description": "Used to query for the next page of comments.",
            "required": false,
            "type": "string"
          },
          {
            "in": "query",
            "name": "includeDeleted",
            "description": "Specify if the deleted comments should be retrieved.",
            "required": false,
            "type": "boolean"
          },
          {
            "in": "query",
            "name": "$expand",
            "description": "Specifies the additional data retrieval options for work item comments.",
            "required": false,
            "type": "string",
            "enum": [
              "none",
              "reactions",
              "renderedText",
              "renderedTextOnly",
              "all"
            ],
            "x-ms-enum": {
              "name": "CommentExpandOptions",
              "values": [
                {
                  "value": "none",
                  "description": ""
                },
                {
                  "value": "reactions",
                  "description": "Include comment reactions."
                },
                {
                  "value": "renderedText",
                  "description": "Include the rendered text (html) in addition to MD text."
                },
                {
                  "value": "renderedTextOnly",
                  "description": "If specified, then ONLY rendered text (html) will be returned, w/o markdown. Supposed to be used internally from data provides for optimization purposes."
                },
                {
                  "value": "all",
                  "description": ""
                }
              ]
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Order in which the comments should be returned.",
            "required": false,
            "type": "string",
            "enum": [
              "asc",
              "desc"
            ],
            "x-ms-enum": {
              "name": "CommentSortOrder",
              "values": [
                {
                  "value": "asc",
                  "description": "The results will be sorted in Ascending order."
                },
                {
                  "value": "desc",
                  "description": "The results will be sorted in Descending order."
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.4"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/CommentList"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work"
            ]
          }
        ],
        "x-ms-examples": {
          "Get the first page of comments": {
            "$ref": "./httpExamples/comments/GET__wit_workitems__issueId__comments_1.json"
          },
          "Get the next page of comments": {
            "$ref": "./httpExamples/comments/GET__wit_workitems__issueId__comments_2.json"
          }
        }
      }
    },
    "/{organization}/{project}/_apis/wit/workItems/{workItemId}/comments/{commentId}?format={format}": {
      "patch": {
        "tags": [
          "Comments"
        ],
        "x-ms-docs-override-version": "7.2-preview.4",
        "x-ms-vss-resource": "comments",
        "x-ms-vss-method": "UpdateWorkItemComment",
        "x-ms-preview": true,
        "description": "Update a comment on a work item.",
        "operationId": "Comments_Update Work Item Comment",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "organization",
            "description": "The name of the Azure DevOps organization.",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Comment update request.",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CommentUpdate"
            }
          },
          {
            "in": "path",
            "name": "project",
            "description": "Project ID or project name",
            "required": true,
            "type": "string"
          },
          {
            "in": "path",
            "name": "workItemId",
            "description": "Id of a work item.",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "path",
            "name": "commentId",
            "description": "",
            "required": true,
            "type": "integer",
            "format": "int32"
          },
          {
            "in": "query",
            "name": "format",
            "description": "Format of a work item comment (Markdown or Html).",
            "required": true,
            "type": "string",
            "enum": [
              "markdown",
              "html"
            ],
            "x-ms-enum": {
              "name": "CommentFormat",
              "values": [
                {
                  "value": "markdown",
                  "description": ""
                },
                {
                  "value": "html",
                  "description": ""
                }
              ]
            }
          },
          {
            "$ref": "#/parameters/api-Version-preview.4"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "$ref": "#/definitions/Comment"
            }
          }
        },
        "security": [
          {
            "oauth2": [
              "vso.work_write"
            ]
          }
        ],
        "x-ms-examples": {
          "Update a comment": {
            "$ref": "./httpExamples/comments/PATCH__wit_workitems__taskId__comments_1.json"
          }
        }
      }
    }
  },
  "x-original-swagger-version": "2.0"
}